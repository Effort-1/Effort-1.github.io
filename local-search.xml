<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>今日头条项目流程</title>
    <link href="/2021/07/28/%E4%BB%8A%E6%97%A5%E5%A4%B4%E6%9D%A1%E9%A1%B9%E7%9B%AE%E6%B5%81%E7%A8%8B/"/>
    <url>/2021/07/28/%E4%BB%8A%E6%97%A5%E5%A4%B4%E6%9D%A1%E9%A1%B9%E7%9B%AE%E6%B5%81%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h3 id="今日头条"><a href="#今日头条" class="headerlink" title="今日头条"></a>今日头条</h3><h5 id="技术栈："><a href="#技术栈：" class="headerlink" title="技术栈："></a>技术栈：</h5><figure class="highlight stata"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div></td><td class="code"><pre><code class="hljs stata">基于 Vue.js 的前端框架<br>基于 webpack 工程化开发解决方案<br>基于 Vant 的前端 UI 组件库，开发效率更高<br>基于 axios 的请求库，功能强大性能高效<br>基于 RESTful 风格的数据 API 解决方案（90% 的后端均采用这种风格提供数据 API，全栈级能力，升职加薪不在话下）<br>基于 JWT 的 <span class="hljs-keyword">Token</span> 状态维持解决方案（能够让你强化更多服务器知识）<br>基于 Vue Router 的路由管理方案<br>基于 Vuex 的状态共享方案<br>基于 Vue <span class="hljs-keyword">CLI</span> 的脚手架工具，快速创建项目快速开发<br>基于 Socket.IO 的实时通信解决方案<br>基于 PostCSS 的移动端 REM 适配解决方案<br>基于 DCloud 平台的移动 <span class="hljs-keyword">App</span> 开发解决方案<br></code></pre></td></tr></table></figure><h5 id="初始项目"><a href="#初始项目" class="headerlink" title="初始项目"></a>初始项目</h5><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs coffeescript">安装脚手架 <span class="hljs-built_in">npm</span> install --<span class="hljs-built_in">global</span> @vue/cli<br></code></pre></td></tr></table></figure><h5 id="项目目录结构"><a href="#项目目录结构" class="headerlink" title="项目目录结构"></a>项目目录结构</h5><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs stylus">.<br>├── node_modules              第三方包存储目录<br>├── public                    任何放置在 public 文件夹的静态资源都会被简单的复制，而不经过 webpack。<br>│   ├── favicon<span class="hljs-selector-class">.ico</span>           浏览器收藏夹图标<br>│   └── index<span class="hljs-selector-class">.html</span>            单页面 HTML 文件<br>├── <span class="hljs-attribute">src</span><br>│   ├── assets                公共资源目录，放图片等资源<br>│   ├── components            公共组件目录<br>│   ├── router                Vue Router 路由模块<br>│   ├── store                 Vue 容器模块<br>│   ├── views                 视图组件存储目录，所有的路由页面都存储到这里<br>│   ├── App<span class="hljs-selector-class">.vue</span>               根组件，最终被替换渲染到 index<span class="hljs-selector-class">.html</span> 页面中 <span class="hljs-selector-id">#app</span> 入口节点<br>│   └── <span class="hljs-selector-tag">main</span><span class="hljs-selector-class">.js</span>               整个项目的启动入口模块<br>├── <span class="hljs-selector-class">.browserslistrc</span>           指定了项目的目标浏览器的范围。这个值会被 @babel/preset-env 和 Autoprefixer 用来确定需要转译的 JavaScript 特性和需要添加的 CSS 浏览器前缀<br>├── <span class="hljs-selector-class">.editorconfig</span>             EditorConfig 帮助开发人员定义和维护跨编辑器（或IDE）的统一的代码风格，详情参考这里：https:<span class="hljs-comment">//editorconfig.org/。</span><br>├── <span class="hljs-selector-class">.eslintrc</span><span class="hljs-selector-class">.js</span>              ESLint 的配置文件<br>├── <span class="hljs-selector-class">.gitignore</span>                Git 的忽略配置文件，告诉Git项目中要忽略的文件或文件夹<br>├── README<span class="hljs-selector-class">.md</span>                 说明文档<br>├── babel<span class="hljs-selector-class">.config</span><span class="hljs-selector-class">.js</span>           Babel 的配置文件<br>├── package-lock<span class="hljs-selector-class">.json</span>         记录安装时的包的版本号，以保证自己或其他人在 npm install 时大家的依赖能保证一致<br>└── package<span class="hljs-selector-class">.json</span>              包说明文件，记录了项目中使用到的第三方包依赖信息等内容<br></code></pre></td></tr></table></figure><h5 id="创建码云或Github仓库"><a href="#创建码云或Github仓库" class="headerlink" title="创建码云或Github仓库"></a>创建码云或Github仓库</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">将代码提交到云端仓库<br></code></pre></td></tr></table></figure><h5 id="删除脚手架创建的无用文件"><a href="#删除脚手架创建的无用文件" class="headerlink" title="删除脚手架创建的无用文件"></a>删除脚手架创建的无用文件</h5><h5 id="引入-Vant-组件库"><a href="#引入-Vant-组件库" class="headerlink" title="引入 Vant 组件库"></a>引入 Vant 组件库</h5><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs stylus">选择导入所有组件<br><br>安装 Vant <br>npm <span class="hljs-selector-tag">i</span> Vant <br><br>在 <span class="hljs-selector-tag">main</span><span class="hljs-selector-class">.js</span> 文件中加载注册 Vant 组件<br>import Vant from <span class="hljs-string">&#x27;vant&#x27;</span><br><span class="hljs-comment">//引入 Vant 样式文件</span><br>import <span class="hljs-string">&#x27;vant/lib/index.css&#x27;</span><br><br><span class="hljs-comment">//注册 Vant</span><br>Vue<span class="hljs-selector-class">.use</span>(Vant)<br></code></pre></td></tr></table></figure><h5 id="移动端-REM-适配"><a href="#移动端-REM-适配" class="headerlink" title="移动端 REM 适配"></a>移动端 REM 适配</h5><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs vbnet">Vant 中的样式默认使用 px 作为单位，如果需要使用<span class="hljs-comment"> rem 单位，推荐使用以下两个工具：</span><br><br>postcss-pxtorem 是一款 postcss 插件，用于将 px 单位转化为 rem<br><span class="hljs-keyword">lib</span>-flexible 用于设置<span class="hljs-comment"> rem 基准值</span><br><br>下面我们分别将这两个工具配置到项目中完成<span class="hljs-comment"> REM 适配。</span><br><br>（<span class="hljs-number">1</span>）使用 <span class="hljs-keyword">lib</span>-flexible 动态设置<span class="hljs-comment"> REM 基准值（html 标签的字体大小）</span><br>安装依赖：<br> npm i amfe-flexible<br> <br>然后在 main.js 文件中导入该模块<br>import <span class="hljs-comment">&#x27;amfe-flexible&#x27;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>mobile</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>数据可视化Echarts教程</title>
    <link href="/2021/06/06/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96Echarts%E6%95%99%E7%A8%8B/"/>
    <url>/2021/06/06/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96Echarts%E6%95%99%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h2 id="可视化面板介绍"><a href="#可视化面板介绍" class="headerlink" title="可视化面板介绍"></a>可视化面板介绍</h2><p>​    应对现在数据可视化的趋势，越来越多企业需要在很多场景(营销数据，生产数据，用户数据)下使用，可视化图表来展示体现数据，让数据更加直观，数据特点更加突出。</p><h3 id="01-使用技术"><a href="#01-使用技术" class="headerlink" title="01-使用技术"></a>01-使用技术</h3><p>完成该项目需要具备以下知识：</p><ul><li>div + css 布局</li><li>flex 布局</li><li>Less</li><li>原生js + jquery 使用</li><li>rem适配</li><li><strong>echarts基础</strong></li></ul><h3 id="02-案例适配方案"><a href="#02-案例适配方案" class="headerlink" title="02- 案例适配方案"></a>02- 案例适配方案</h3><ul><li><p>设计稿是1920px  </p><ol><li><p>flexible.js 把屏幕分为 24 等份</p></li><li><p>cssrem 插件的基准值是  80px </p><p>插件-配置按钮—配置扩展设置–Root Font Size 里面 设置。 </p><p>但是别忘记重启vscode软件保证生效</p></li></ol></li></ul><h3 id="03-基础设置"><a href="#03-基础设置" class="headerlink" title="03-基础设置"></a>03-基础设置</h3><ul><li>body 设置背景图 ，缩放为 100%  ， 行高1.15</li><li>css初始化</li></ul><h3 id="04-header-布局"><a href="#04-header-布局" class="headerlink" title="04-header 布局"></a>04-header 布局</h3><ul><li>高度为100px</li><li>背景图，在容器内显示</li><li>缩放比例为 100%</li><li>h1 标题部分   白色  38像素 居中显示  行高为 80像素</li><li>时间模块 showTime   定位右侧  right 为 30px   行高为 75px  文字颜色为：rgba(255, 255, 255, 0.7)     而文字大小为 20像素 </li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></div></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 格式： 当前时间：2020年3月17-0时54分14秒</span><br>&lt;script&gt;<br>            <span class="hljs-keyword">var</span> t = <span class="hljs-literal">null</span>;<br>            t = <span class="hljs-built_in">setTimeout</span>(time, <span class="hljs-number">1000</span>);<span class="hljs-comment">//開始运行</span><br>            <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">time</span>(<span class="hljs-params"></span>) </span>&#123;<br>                <span class="hljs-built_in">clearTimeout</span>(t);<span class="hljs-comment">//清除定时器</span><br>                dt = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>();<br>                <span class="hljs-keyword">var</span> y = dt.getFullYear();<br>                <span class="hljs-keyword">var</span> mt = dt.getMonth() + <span class="hljs-number">1</span>;<br>                <span class="hljs-keyword">var</span> day = dt.getDate();<br>                <span class="hljs-keyword">var</span> h = dt.getHours();<span class="hljs-comment">//获取时</span><br>                <span class="hljs-keyword">var</span> m = dt.getMinutes();<span class="hljs-comment">//获取分</span><br>                <span class="hljs-keyword">var</span> s = dt.getSeconds();<span class="hljs-comment">//获取秒</span><br>                <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&quot;.showTime&quot;</span>).innerHTML = <span class="hljs-string">&#x27;当前时间：&#x27;</span> + y + <span class="hljs-string">&quot;年&quot;</span> + mt + <span class="hljs-string">&quot;月&quot;</span> + day + <span class="hljs-string">&quot;-&quot;</span> + h + <span class="hljs-string">&quot;时&quot;</span> + m + <span class="hljs-string">&quot;分&quot;</span> + s + <span class="hljs-string">&quot;秒&quot;</span>;<br>                t = <span class="hljs-built_in">setTimeout</span>(time, <span class="hljs-number">1000</span>); <span class="hljs-comment">//设定定时器，循环运行     </span><br>            &#125;<br> &lt;/script&gt;<br></code></pre></td></tr></table></figure><ul><li>header部分css样式</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">header</span> &#123;<br>  <span class="hljs-attribute">position</span>: relative;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">1.25rem</span>;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">../images/head_bg.png</span>) no-repeat top center;<br>  <span class="hljs-attribute">background-size</span>: <span class="hljs-number">100%</span> <span class="hljs-number">100%</span>;<br>  <span class="hljs-selector-tag">h1</span> &#123;<br>    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">0.475rem</span>;<br>    <span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>;<br>    <span class="hljs-attribute">text-align</span>: center;<br>    <span class="hljs-attribute">line-height</span>: <span class="hljs-number">1rem</span>;<br>  &#125;<br>  <span class="hljs-selector-class">.showTime</span> &#123;<br>    <span class="hljs-attribute">position</span>: absolute;<br>    <span class="hljs-attribute">top</span>: <span class="hljs-number">0</span>;<br>    <span class="hljs-attribute">right</span>: <span class="hljs-number">0.375rem</span>;<br>    <span class="hljs-attribute">line-height</span>: <span class="hljs-number">0.9375rem</span>;<br>    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">0.25rem</span>;<br>    <span class="hljs-attribute">color</span>: <span class="hljs-built_in">rgba</span>(<span class="hljs-number">255</span>, <span class="hljs-number">255</span>, <span class="hljs-number">255</span>, <span class="hljs-number">0.7</span>);<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="05-mainbox-主体模块"><a href="#05-mainbox-主体模块" class="headerlink" title="05-mainbox  主体模块"></a>05-mainbox  主体模块</h3><ul><li>需要一个上左右的10px 的内边距</li></ul><ul><li>column 列容器，分三列，占比 3：5：3</li></ul><p>css样式：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.mainbox</span> &#123;<br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">0.125rem</span> <span class="hljs-number">0.125rem</span> <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">display</span>: flex;<br>  <span class="hljs-selector-class">.column</span> &#123;<br>    <span class="hljs-attribute">flex</span>: <span class="hljs-number">3</span>;<br>  &#125;<br>  &amp;<span class="hljs-selector-pseudo">:nth-child</span>(<span class="hljs-number">2</span>) &#123;<br>    <span class="hljs-attribute">flex</span>: <span class="hljs-number">5</span>;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="06-公共面板模块-panel"><a href="#06-公共面板模块-panel" class="headerlink" title="06-公共面板模块 panel"></a>06-公共面板模块 panel</h3><ul><li>高度为 310px</li><li>1像素的 1px solid rgba(25, 186, 139, 0.17)  边框</li><li>有line.jpg 背景图片</li><li>padding为  上为 0  左右 15px  下为 40px</li><li>下外边距是 15px</li><li>利用panel  盒子 before 和after 制作上面两个角   大小为 10px  线条为  2px solid #02a6b5</li><li>新加一个盒子before 和after   制作下侧两个角  宽度高度为 10px</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.panel</span> &#123;<br>  <span class="hljs-attribute">position</span>: relative;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">3.875rem</span>;<br>  <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid <span class="hljs-built_in">rgba</span>(<span class="hljs-number">25</span>, <span class="hljs-number">186</span>, <span class="hljs-number">139</span>, <span class="hljs-number">0.17</span>);<br>  <span class="hljs-attribute">background</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">../images/line\(1\</span>).png);<br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span> <span class="hljs-number">0.1875rem</span> <span class="hljs-number">0.5rem</span>;<br>  <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">0.1875rem</span>;<br>  &amp;<span class="hljs-selector-pseudo">::before</span> &#123;<br>    <span class="hljs-attribute">position</span>: absolute;<br>    <span class="hljs-attribute">top</span>: <span class="hljs-number">0</span>;<br>    <span class="hljs-attribute">left</span>: <span class="hljs-number">0</span>;<br>    <span class="hljs-attribute">content</span>: <span class="hljs-string">&quot;&quot;</span>;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">10px</span>;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">10px</span>;<br>    <span class="hljs-attribute">border-top</span>: <span class="hljs-number">2px</span> solid <span class="hljs-number">#02a6b5</span>;<br>    <span class="hljs-attribute">border-left</span>: <span class="hljs-number">2px</span> solid <span class="hljs-number">#02a6b5</span>;<br>  &#125;<br>  &amp;<span class="hljs-selector-pseudo">::after</span> &#123;<br>    <span class="hljs-attribute">position</span>: absolute;<br>    <span class="hljs-attribute">top</span>: <span class="hljs-number">0</span>;<br>    <span class="hljs-attribute">right</span>: <span class="hljs-number">0</span>;<br>    <span class="hljs-attribute">content</span>: <span class="hljs-string">&quot;&quot;</span>;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">10px</span>;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">10px</span>;<br>    <span class="hljs-attribute">border-top</span>: <span class="hljs-number">2px</span> solid <span class="hljs-number">#02a6b5</span>;<br>    <span class="hljs-attribute">border-right</span>: <span class="hljs-number">2px</span> solid <span class="hljs-number">#02a6b5</span>;<br>  &#125;<br>  <span class="hljs-selector-class">.panel-footer</span> &#123;<br>    <span class="hljs-attribute">position</span>: absolute;<br>    <span class="hljs-attribute">left</span>: <span class="hljs-number">0</span>;<br>    <span class="hljs-attribute">bottom</span>: <span class="hljs-number">0</span>;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<br>    &amp;<span class="hljs-selector-pseudo">::before</span> &#123;<br>      <span class="hljs-attribute">position</span>: absolute;<br>      <span class="hljs-attribute">bottom</span>: <span class="hljs-number">0</span>;<br>      <span class="hljs-attribute">left</span>: <span class="hljs-number">0</span>;<br>      <span class="hljs-attribute">content</span>: <span class="hljs-string">&quot;&quot;</span>;<br>      <span class="hljs-attribute">width</span>: <span class="hljs-number">10px</span>;<br>      <span class="hljs-attribute">height</span>: <span class="hljs-number">10px</span>;<br>      <span class="hljs-attribute">border-bottom</span>: <span class="hljs-number">2px</span> solid <span class="hljs-number">#02a6b5</span>;<br>      <span class="hljs-attribute">border-left</span>: <span class="hljs-number">2px</span> solid <span class="hljs-number">#02a6b5</span>;<br>    &#125;<br>    &amp;<span class="hljs-selector-pseudo">::after</span> &#123;<br>      <span class="hljs-attribute">position</span>: absolute;<br>      <span class="hljs-attribute">bottom</span>: <span class="hljs-number">0</span>;<br>      <span class="hljs-attribute">right</span>: <span class="hljs-number">0</span>;<br>      <span class="hljs-attribute">content</span>: <span class="hljs-string">&quot;&quot;</span>;<br>      <span class="hljs-attribute">width</span>: <span class="hljs-number">10px</span>;<br>      <span class="hljs-attribute">height</span>: <span class="hljs-number">10px</span>;<br>      <span class="hljs-attribute">border-bottom</span>: <span class="hljs-number">2px</span> solid <span class="hljs-number">#02a6b5</span>;<br>      <span class="hljs-attribute">border-right</span>: <span class="hljs-number">2px</span> solid <span class="hljs-number">#02a6b5</span>;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="07-柱形图-bar-模块-布局"><a href="#07-柱形图-bar-模块-布局" class="headerlink" title="07-柱形图 bar 模块(布局)"></a>07-柱形图 bar 模块(布局)</h3><ul><li><p>标题模块  h2    高度为 48px   文字颜色为白色  文字大小为  20px  </p></li><li><p>图标内容模块  chart   高度 240px </p></li><li><p>以上可以作为panel公共样式部分 </p></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">h2</span> &#123;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">0.6rem</span>;<br>  <span class="hljs-attribute">line-height</span>: <span class="hljs-number">0.6rem</span>;<br>  <span class="hljs-attribute">text-align</span>: center;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">20px</span>;<br>  <span class="hljs-attribute">font-weight</span>: <span class="hljs-number">400</span>;<br>&#125;<br><span class="hljs-selector-class">.chart</span> &#123;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">3rem</span>;<br>  <span class="hljs-attribute">background-color</span>: pink;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="08-中间布局"><a href="#08-中间布局" class="headerlink" title="08-中间布局"></a>08-中间布局</h3><ul><li>上面是no 数字模块</li><li>下面是map 地图模块</li></ul><ol><li>数字模块 no  有个背景颜色  rgba(101, 132, 226, 0.1);  有个15像素的内边距</li><li>注意中间列 column 有个 左右 10px 下 15px 的外边距</li><li>no 模块里面上下划分  上面是数字（no-hd)   下面 是 相关文字说明(no-bd)</li><li>no-hd 数字模块   有一个边框 1px solid rgba(25, 186, 139, 0.17)    </li><li>no-hd 数字模块 里面分为两个小li  每个小li高度为 80px   文字大小为   70px   颜色为 #ffeb7b   字体是图标字体  electronicFont</li><li>no-hd 利用 after 和 before制作2个小角，  边框  2px solid #02a6b5  宽度为 30px  高度为 10px</li><li>小竖线 给 第一个小li after 就可以  1px宽 背景颜色为 rgba(255, 255, 255, 0.2);     高度 50%  top 25% 即可</li><li>no-bd 里面也有两个小li  高度为 40px   文字颜色为  rgba(255, 255, 255, 0.7)   文字大小为 18px   上内边距为  10px</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-comment">/* 声明字体*/</span><br><span class="hljs-keyword">@font-face</span> &#123;<br>  <span class="hljs-attribute">font-family</span>: electronicFont;<br>  <span class="hljs-attribute">src</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">../font/DS-DIGIT.TTF</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>地图模块制作：</p><ol><li>地图模块高度为 810px  里面包含4个盒子  chart 放图表模块      球体盒子  旋转1  旋转2  </li><li>球体图片模块 map1    大小为 518px  要加背景图片 因为要缩放100%     定位到最中央    透明度 .3   </li><li>旋转1  map 2    大小为 643px 要加背景图片 因为要缩放100%    定位到中央  透明度  .6   做旋转动画   利用z-index压住球体</li><li>旋转2  map3  大小为 566px  要加背景图片 因为要缩放100%    定位到中央 旋转动画 注意是逆时针 </li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;no&quot;</span>&gt;</span><br>               <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;no-hd&quot;</span>&gt;</span><br>                   <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>                       <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>125811<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>                       <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>104563<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>                   <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>               <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>               <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;no-bd&quot;</span>&gt;</span><br>                   <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>                       <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>前端需求人数<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>                       <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>市场供应人数<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>                   <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>               <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>           <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>           <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;map&quot;</span>&gt;</span><br>               <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;chart&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>               <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;map1&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>               <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;map2&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>               <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;map3&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>           <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><p>中间样式</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-comment">/* 声明字体*/</span><br><span class="hljs-keyword">@font-face</span> &#123;<br>  <span class="hljs-attribute">font-family</span>: electronicFont;<br>  <span class="hljs-attribute">src</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">../font/DS-DIGIT.TTF</span>);<br>&#125;<br><span class="hljs-selector-class">.no</span> &#123;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-built_in">rgba</span>(<span class="hljs-number">101</span>, <span class="hljs-number">132</span>, <span class="hljs-number">226</span>, <span class="hljs-number">0.1</span>);<br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">0.1875rem</span>;<br>  <span class="hljs-selector-class">.no-hd</span> &#123;<br>    <span class="hljs-attribute">position</span>: relative;<br>    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid <span class="hljs-built_in">rgba</span>(<span class="hljs-number">25</span>, <span class="hljs-number">186</span>, <span class="hljs-number">139</span>, <span class="hljs-number">0.17</span>);<br>    &amp;<span class="hljs-selector-pseudo">::before</span> &#123;<br>      <span class="hljs-attribute">content</span>: <span class="hljs-string">&quot;&quot;</span>;<br>      <span class="hljs-attribute">position</span>: absolute;<br>      <span class="hljs-attribute">width</span>: <span class="hljs-number">30px</span>;<br>      <span class="hljs-attribute">height</span>: <span class="hljs-number">10px</span>;<br>      <span class="hljs-attribute">border-top</span>: <span class="hljs-number">2px</span> solid <span class="hljs-number">#02a6b5</span>;<br>      <span class="hljs-attribute">border-left</span>: <span class="hljs-number">2px</span> solid <span class="hljs-number">#02a6b5</span>;<br>      <span class="hljs-attribute">top</span>: <span class="hljs-number">0</span>;<br>      <span class="hljs-attribute">left</span>: <span class="hljs-number">0</span>;<br>    &#125;<br>    &amp;<span class="hljs-selector-pseudo">::after</span> &#123;<br>      <span class="hljs-attribute">content</span>: <span class="hljs-string">&quot;&quot;</span>;<br>      <span class="hljs-attribute">position</span>: absolute;<br>      <span class="hljs-attribute">width</span>: <span class="hljs-number">30px</span>;<br>      <span class="hljs-attribute">height</span>: <span class="hljs-number">10px</span>;<br>      <span class="hljs-attribute">border-bottom</span>: <span class="hljs-number">2px</span> solid <span class="hljs-number">#02a6b5</span>;<br>      <span class="hljs-attribute">border-right</span>: <span class="hljs-number">2px</span> solid <span class="hljs-number">#02a6b5</span>;<br>      <span class="hljs-attribute">right</span>: <span class="hljs-number">0</span>;<br>      <span class="hljs-attribute">bottom</span>: <span class="hljs-number">0</span>;<br>    &#125;<br>    <span class="hljs-selector-tag">ul</span> &#123;<br>      <span class="hljs-attribute">display</span>: flex;<br>      <span class="hljs-selector-tag">li</span> &#123;<br>        <span class="hljs-attribute">position</span>: relative;<br>        <span class="hljs-attribute">flex</span>: <span class="hljs-number">1</span>;<br>        <span class="hljs-attribute">text-align</span>: center;<br>        <span class="hljs-attribute">height</span>: <span class="hljs-number">1rem</span>;<br>        <span class="hljs-attribute">line-height</span>: <span class="hljs-number">1rem</span>;<br>        <span class="hljs-attribute">font-size</span>: <span class="hljs-number">0.875rem</span>;<br>        <span class="hljs-attribute">color</span>: <span class="hljs-number">#ffeb7b</span>;<br>        <span class="hljs-attribute">padding</span>: <span class="hljs-number">0.05rem</span> <span class="hljs-number">0</span>;<br>        <span class="hljs-attribute">font-family</span>: electronicFont;<br>        <span class="hljs-attribute">font-weight</span>: bold;<br>        &amp;<span class="hljs-selector-pseudo">:first</span>-child<span class="hljs-selector-pseudo">::after</span> &#123;<br>          <span class="hljs-attribute">content</span>: <span class="hljs-string">&quot;&quot;</span>;<br>          <span class="hljs-attribute">position</span>: absolute;<br>          <span class="hljs-attribute">height</span>: <span class="hljs-number">50%</span>;<br>          <span class="hljs-attribute">width</span>: <span class="hljs-number">1px</span>;<br>          <span class="hljs-attribute">background</span>: <span class="hljs-built_in">rgba</span>(<span class="hljs-number">255</span>, <span class="hljs-number">255</span>, <span class="hljs-number">255</span>, <span class="hljs-number">0.2</span>);<br>          <span class="hljs-attribute">right</span>: <span class="hljs-number">0</span>;<br>          <span class="hljs-attribute">top</span>: <span class="hljs-number">25%</span>;<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>  <span class="hljs-selector-class">.no-bd</span> <span class="hljs-selector-tag">ul</span> &#123;<br>    <span class="hljs-attribute">display</span>: flex;<br>    <span class="hljs-selector-tag">li</span> &#123;<br>      <span class="hljs-attribute">flex</span>: <span class="hljs-number">1</span>;<br>      <span class="hljs-attribute">height</span>: <span class="hljs-number">0.5rem</span>;<br>      <span class="hljs-attribute">line-height</span>: <span class="hljs-number">0.5rem</span>;<br>      <span class="hljs-attribute">text-align</span>: center;<br>      <span class="hljs-attribute">font-size</span>: <span class="hljs-number">0.225rem</span>;<br>      <span class="hljs-attribute">color</span>: <span class="hljs-built_in">rgba</span>(<span class="hljs-number">255</span>, <span class="hljs-number">255</span>, <span class="hljs-number">255</span>, <span class="hljs-number">0.7</span>);<br>      <span class="hljs-attribute">padding-top</span>: <span class="hljs-number">0.125rem</span>;<br>    &#125;<br>  &#125;<br>&#125;<br><span class="hljs-selector-class">.map</span> &#123;<br>  <span class="hljs-attribute">position</span>: relative;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">10.125rem</span>;<br>  <span class="hljs-selector-class">.chart</span> &#123;<br>    <span class="hljs-attribute">position</span>: absolute;<br>    <span class="hljs-attribute">top</span>: <span class="hljs-number">0</span>;<br>    <span class="hljs-attribute">left</span>: <span class="hljs-number">0</span>;<br>    <span class="hljs-attribute">z-index</span>: <span class="hljs-number">5</span>;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">10.125rem</span>;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<br>  &#125;<br>  <span class="hljs-selector-class">.map1</span>,<br>  <span class="hljs-selector-class">.map2</span>,<br>  <span class="hljs-selector-class">.map3</span> &#123;<br>    <span class="hljs-attribute">position</span>: absolute;<br>    <span class="hljs-attribute">top</span>: <span class="hljs-number">50%</span>;<br>    <span class="hljs-attribute">left</span>: <span class="hljs-number">50%</span>;<br>    <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translate</span>(-<span class="hljs-number">50%</span>, -<span class="hljs-number">50%</span>);<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">6.475rem</span>;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">6.475rem</span>;<br>    <span class="hljs-attribute">background</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">../images/map.png</span>) no-repeat;<br>    <span class="hljs-attribute">background-size</span>: <span class="hljs-number">100%</span> <span class="hljs-number">100%</span>;<br>    <span class="hljs-attribute">opacity</span>: <span class="hljs-number">0.3</span>;<br>  &#125;<br>  <span class="hljs-selector-class">.map2</span> &#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">8.0375rem</span>;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">8.0375rem</span>;<br>    <span class="hljs-attribute">background-image</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">../images/lbx.png</span>);<br>    <span class="hljs-attribute">opacity</span>: <span class="hljs-number">0.6</span>;<br>    <span class="hljs-attribute">animation</span>: rotate <span class="hljs-number">15s</span> linear infinite;<br>    <span class="hljs-attribute">z-index</span>: <span class="hljs-number">2</span>;<br>  &#125;<br>  <span class="hljs-selector-class">.map3</span> &#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">7.075rem</span>;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">7.075rem</span>;<br>    <span class="hljs-attribute">background-image</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">../images/jt.png</span>);<br>    <span class="hljs-attribute">animation</span>: rotate1 <span class="hljs-number">10s</span> linear infinite;<br>  &#125;<br><br>  <span class="hljs-keyword">@keyframes</span> rotate &#123;<br>    <span class="hljs-selector-tag">from</span> &#123;<br>      <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translate</span>(-<span class="hljs-number">50%</span>, -<span class="hljs-number">50%</span>) <span class="hljs-built_in">rotate</span>(<span class="hljs-number">0deg</span>);<br>    &#125;<br>    <span class="hljs-selector-tag">to</span> &#123;<br>      <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translate</span>(-<span class="hljs-number">50%</span>, -<span class="hljs-number">50%</span>) <span class="hljs-built_in">rotate</span>(<span class="hljs-number">360deg</span>);<br>    &#125;<br>  &#125;<br>  <span class="hljs-keyword">@keyframes</span> rotate1 &#123;<br>    <span class="hljs-selector-tag">from</span> &#123;<br>      <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translate</span>(-<span class="hljs-number">50%</span>, -<span class="hljs-number">50%</span>) <span class="hljs-built_in">rotate</span>(<span class="hljs-number">0deg</span>);<br>    &#125;<br>    <span class="hljs-selector-tag">to</span> &#123;<br>      <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translate</span>(-<span class="hljs-number">50%</span>, -<span class="hljs-number">50%</span>) <span class="hljs-built_in">rotate</span>(-<span class="hljs-number">360deg</span>);<br>    &#125;<br>  &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="09-Echarts-介绍"><a href="#09-Echarts-介绍" class="headerlink" title="09-Echarts-介绍"></a>09-Echarts-介绍</h3><p>常见的数据可视化库：</p><ul><li>D3.js   目前 Web 端评价最高的 Javascript 可视化工具库(入手难)  </li><li>ECharts.js   百度出品的一个开源 Javascript 数据可视化库   </li><li>Highcharts.js  国外的前端数据可视化库，非商用免费，被许多国外大公司所使用  </li><li>AntV  蚂蚁金服全新一代数据可视化解决方案  等等</li><li>Highcharts 和 Echarts 就像是 Office 和 WPS 的关系</li></ul><blockquote><p>ECharts，一个使用 JavaScript 实现的开源可视化库，可以流畅的运行在 PC 和移动设备上，兼容当前绝大部分浏览器（IE8/9/10/11，Chrome，Firefox，Safari等），底层依赖矢量图形库 <a href="https://github.com/ecomfe/zrender">ZRender</a>，提供直观，交互丰富，可高度个性化定制的数据可视化图表。</p></blockquote><p>大白话：</p><ul><li>是一个JS插件</li><li>性能好可流畅运行PC与移动设备</li><li>兼容主流浏览器</li><li>提供很多常用图表，且可<strong>定制</strong>。<ul><li><a href="https://www.echartsjs.com/zh/option.html#series-line">折线图</a>、<a href="https://www.echartsjs.com/zh/option.html#series-bar">柱状图</a>、<a href="https://www.echartsjs.com/zh/option.html#series-scatter">散点图</a>、<a href="https://www.echartsjs.com/zh/option.html#series-pie">饼图</a>、<a href="https://www.echartsjs.com/zh/option.html#series-candlestick">K线图</a></li></ul></li></ul><p>官网地址：<a href="https://www.echartsjs.com/zh/index.html">https://www.echartsjs.com/zh/index.html</a></p><h3 id="10-Echarts-体验"><a href="#10-Echarts-体验" class="headerlink" title="10-Echarts-体验"></a>10-Echarts-体验</h3><p>官方教程：[五分钟上手ECharts](<a href="https://www.echartsjs.com/zh/tutorial.html#5">https://www.echartsjs.com/zh/tutorial.html#5</a> 分钟上手 ECharts)</p><ul><li>下载echarts  <a href="https://github.com/apache/incubator-echarts/tree/4.5.0">https://github.com/apache/incubator-echarts/tree/4.5.0</a>  </li></ul><p>使用步骤：</p><ol><li>引入echarts 插件文件到html页面中</li><li>准备一个<strong>具备大小</strong>的DOM容器</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;main&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 600px;height:400px;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><ol start="3"><li> 初始化echarts实例对象</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">var</span> myChart = echarts.init(<span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&#x27;main&#x27;</span>));<br></code></pre></td></tr></table></figure><ol start="4"><li>指定配置项和数据(option)</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">var</span> option = &#123;<br>    xAxis: &#123;<br>        type: <span class="hljs-string">&#x27;category&#x27;</span>,<br>        data: [<span class="hljs-string">&#x27;Mon&#x27;</span>, <span class="hljs-string">&#x27;Tue&#x27;</span>, <span class="hljs-string">&#x27;Wed&#x27;</span>, <span class="hljs-string">&#x27;Thu&#x27;</span>, <span class="hljs-string">&#x27;Fri&#x27;</span>, <span class="hljs-string">&#x27;Sat&#x27;</span>, <span class="hljs-string">&#x27;Sun&#x27;</span>]<br>    &#125;,<br>    yAxis: &#123;<br>        type: <span class="hljs-string">&#x27;value&#x27;</span><br>    &#125;,<br>    series: [&#123;<br>        data: [<span class="hljs-number">820</span>, <span class="hljs-number">932</span>, <span class="hljs-number">901</span>, <span class="hljs-number">934</span>, <span class="hljs-number">1290</span>, <span class="hljs-number">1330</span>, <span class="hljs-number">1320</span>],<br>        type: <span class="hljs-string">&#x27;line&#x27;</span><br>    &#125;]<br>&#125;;<br></code></pre></td></tr></table></figure><ol start="5"><li>将配置项设置给echarts实例对象</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">myChart.setOption(option);<br></code></pre></td></tr></table></figure><h3 id="11-Echarts-基础配置"><a href="#11-Echarts-基础配置" class="headerlink" title="11-Echarts-基础配置"></a>11-Echarts-基础配置</h3><p>这是要求同学们知道以下配置每个模块的主要作用干什么的就可以了</p><blockquote><p>需要了解的主要配置：<code>series</code> <code>xAxis</code> <code>yAxis</code> <code>grid</code> <code>tooltip</code> <code>title</code> <code>legend</code> <code>color</code> </p></blockquote><ul><li><p>series</p><ul><li>系列列表。每个系列通过 <code>type</code> 决定自己的图表类型</li><li>大白话：图标数据，指定什么类型的图标，可以多个图表重叠。</li></ul></li><li><p>xAxis：直角坐标系 grid 中的 x 轴</p><ul><li>boundaryGap: 坐标轴两边留白策略 true，这时候刻度只是作为分隔线，标签和数据点都会在两个刻度之间的带(band)中间。</li></ul></li><li><p>yAxis：直角坐标系 grid 中的 y 轴</p></li><li><p>grid：直角坐标系内绘图网格。 </p></li><li><p>title：标题组件</p></li><li><p>tooltip：提示框组件</p></li><li><p>legend：图例组件</p></li><li><p>color：调色盘颜色列表</p><p>数据堆叠，同个类目轴上系列配置相同的<code>stack</code>值后 后一个系列的值会在前一个系列的值上相加。</p></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">option = &#123;    <span class="hljs-comment">// color设置我们线条的颜色 注意后面是个数组    color: [&#x27;pink&#x27;, &#x27;red&#x27;, &#x27;green&#x27;, &#x27;skyblue&#x27;],    // 设置图表的标题    title: &#123;        text: &#x27;折线图堆叠123&#x27;    &#125;,    // 图表的提示框组件     tooltip: &#123;        // 触发方式        trigger: &#x27;axis&#x27;    &#125;,    // 图例组件    legend: &#123;       // series里面有了 name值则 legend里面的data可以删掉    &#125;,    // 网格配置  grid可以控制线形图 柱状图 图表大小    grid: &#123;        left: &#x27;3%&#x27;,        right: &#x27;4%&#x27;,        bottom: &#x27;3%&#x27;,        // 是否显示刻度标签 如果是true 就显示 否则反之        containLabel: true    &#125;,    // 工具箱组件  可以另存为图片等功能    toolbox: &#123;        feature: &#123;            saveAsImage: &#123;&#125;        &#125;    &#125;,    // 设置x轴的相关配置    xAxis: &#123;        type: &#x27;category&#x27;,        // 是否让我们的线条和坐标轴有缝隙        boundaryGap: false,        data: [&#x27;星期一&#x27;, &#x27;周二&#x27;, &#x27;周三&#x27;, &#x27;周四&#x27;, &#x27;周五&#x27;, &#x27;周六&#x27;, &#x27;周日&#x27;]    &#125;,     // 设置y轴的相关配置    yAxis: &#123;        type: &#x27;value&#x27;    &#125;,    // 系列图表配置 它决定着显示那种类型的图表    series: [        &#123;            name: &#x27;邮件营销&#x27;,            type: &#x27;line&#x27;,                       data: [120, 132, 101, 134, 90, 230, 210]        &#125;,        &#123;            name: &#x27;联盟广告&#x27;,            type: &#x27;line&#x27;,            data: [220, 182, 191, 234, 290, 330, 310]        &#125;,        &#123;            name: &#x27;视频广告&#x27;,            type: &#x27;line&#x27;,                      data: [150, 232, 201, 154, 190, 330, 410]        &#125;,        &#123;            name: &#x27;直接访问&#x27;,            type: &#x27;line&#x27;,                      data: [320, 332, 301, 334, 390, 330, 320]        &#125;    ]&#125;;</span><br></code></pre></td></tr></table></figure><h3 id="12-柱状图图表（两大步骤）"><a href="#12-柱状图图表（两大步骤）" class="headerlink" title="12- 柱状图图表（两大步骤）"></a>12- 柱状图图表（两大步骤）</h3><ul><li>官网找到类似实例， 适当分析，并且引入到HTML页面中</li><li>根据需求定制图表</li></ul><ol><li>引入到html页面中</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 柱状图1模块(function() &#123;  // 实例化对象  let myChart = echarts.init(document.querySelector(&quot;.bar .chart&quot;));  // 指定配置和数据  let option = &#123;    color: [&quot;#3398DB&quot;],    tooltip: &#123;      trigger: &quot;axis&quot;,      axisPointer: &#123;        // 坐标轴指示器，坐标轴触发有效        type: &quot;shadow&quot; // 默认为直线，可选为：&#x27;line&#x27; | &#x27;shadow&#x27;      &#125;    &#125;,    grid: &#123;      left: &quot;3%&quot;,      right: &quot;4%&quot;,      bottom: &quot;3%&quot;,      containLabel: true    &#125;,    xAxis: [      &#123;        type: &quot;category&quot;,        data: [&quot;Mon&quot;, &quot;Tue&quot;, &quot;Wed&quot;, &quot;Thu&quot;, &quot;Fri&quot;, &quot;Sat&quot;, &quot;Sun&quot;],        axisTick: &#123;          alignWithLabel: true        &#125;      &#125;    ],    yAxis: [      &#123;        type: &quot;value&quot;      &#125;    ],    series: [      &#123;        name: &quot;直接访问&quot;,        type: &quot;bar&quot;,        barWidth: &quot;60%&quot;,        data: [10, 52, 200, 334, 390, 330, 220]      &#125;    ]  &#125;;  // 把配置给实例对象  myChart.setOption(option);&#125;)();</span><br></code></pre></td></tr></table></figure><ol start="2"><li><p>根据需求定制</p><ul><li>修改图表柱形颜色  #2f89cf</li></ul></li></ol><ul><li>修改图表大小  top 为 10px   bottom 为  4%    grid决定我们的柱状图的大小</li></ul>   <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript">color: [<span class="hljs-string">&quot;#2f89cf&quot;</span>],<span class="hljs-attr">grid</span>: &#123;  <span class="hljs-attr">left</span>: <span class="hljs-string">&quot;0%&quot;</span>,  <span class="hljs-attr">top</span>: <span class="hljs-string">&quot;10px&quot;</span>,  <span class="hljs-attr">right</span>: <span class="hljs-string">&quot;0%&quot;</span>,  <span class="hljs-attr">bottom</span>: <span class="hljs-string">&quot;4%&quot;</span>,  <span class="hljs-attr">containLabel</span>: <span class="hljs-literal">true</span>&#125;,<br></code></pre></td></tr></table></figure><ul><li>X轴相关设置  xAxis<ul><li>文本颜色设置为   rgba(255,255,255,.6)   字体大小为 12px</li><li>X轴线的样式 不显示</li></ul></li></ul>   <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-comment">// 设置x轴标签文字样式  // x轴的文字颜色和大小        axisLabel: &#123;          color: &quot;rgba(255,255,255,.6)&quot;,          fontSize: &quot;12&quot;        &#125;,   //  x轴样式不显示   axisLine: &#123;       show: false       // 如果想要设置单独的线条样式        // lineStyle: &#123;       //    color: &quot;rgba(255,255,255,.1)&quot;,       //    width: 1,       //    type: &quot;solid&quot;      &#125;   &#125;</span><br></code></pre></td></tr></table></figure><ul><li>Y 轴相关定制<ul><li>文本颜色设置为   rgba(255,255,255,.6)   字体大小为 12px</li><li>Y 轴线条样式 更改为  1像素的  rgba(255,255,255,.1) 边框</li><li>分隔线的颜色修饰为  1像素的  rgba(255,255,255,.1)   </li></ul></li></ul>   <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-comment">// y 轴文字标签样式axisLabel: &#123;      color: &quot;rgba(255,255,255,.6)&quot;,       fontSize: &quot;12&quot;&#125;, // y轴线条样式 axisLine: &#123;      lineStyle: &#123;         color: &quot;rgba(255,255,255,.1)&quot;,         // width: 1,         // type: &quot;solid&quot;      &#125;&#125;, // y 轴分隔线样式splitLine: &#123;    lineStyle: &#123;       color: &quot;rgba(255,255,255,.1)&quot;     &#125;&#125;</span><br></code></pre></td></tr></table></figure><ul><li>修改柱形为圆角以及柱子宽度  series 里面设置</li></ul>   <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript">series: [      &#123;        <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;直接访问&quot;</span>,        <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;bar&quot;</span>,        <span class="hljs-comment">// 修改柱子宽度        barWidth: &quot;35%&quot;,        data: [10, 52, 200, 334, 390, 330, 220],        itemStyle: &#123;          // 修改柱子圆角          barBorderRadius: 5        &#125;      &#125;    ]  &#125;;</span><br></code></pre></td></tr></table></figure><ul><li>更换对应数据</li></ul>   <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-comment">// x轴中更换data数据</span><br> data: [ <span class="hljs-string">&quot;旅游行业&quot;</span>,<span class="hljs-string">&quot;教育培训&quot;</span>, <span class="hljs-string">&quot;游戏行业&quot;</span>, <span class="hljs-string">&quot;医疗行业&quot;</span>, <span class="hljs-string">&quot;电商行业&quot;</span>, <span class="hljs-string">&quot;社交行业&quot;</span>, <span class="hljs-string">&quot;金融行业&quot;</span> ],<br><span class="hljs-comment">// series 更换数据</span><br> data: [<span class="hljs-number">200</span>, <span class="hljs-number">300</span>, <span class="hljs-number">300</span>, <span class="hljs-number">900</span>, <span class="hljs-number">1500</span>, <span class="hljs-number">1200</span>, <span class="hljs-number">600</span>]<br></code></pre></td></tr></table></figure><ul><li>让图表跟随屏幕自适应</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">window</span>.addEventListener(<span class="hljs-string">&quot;resize&quot;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;<br>  myChart.resize();<br>&#125;);<br></code></pre></td></tr></table></figure><h3 id="13-柱状图2定制"><a href="#13-柱状图2定制" class="headerlink" title="13-柱状图2定制"></a>13-柱状图2定制</h3><ul><li>官网找到类似实例， 适当分析，并且引入到HTML页面中</li><li>根据需求定制图表</li></ul><p>需求1： 修改图形大小 grid</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 图标位置</span><br>  grid: &#123;<br>    top: <span class="hljs-string">&quot;10%&quot;</span>,<br>    left: <span class="hljs-string">&quot;22%&quot;</span>,<br>    bottom: <span class="hljs-string">&quot;10%&quot;</span><br>  &#125;,<br></code></pre></td></tr></table></figure><p>需求2： 不显示x轴 </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript">xAxis: &#123;<br>   show: <span class="hljs-literal">false</span><br> &#125;,<br></code></pre></td></tr></table></figure><p>需求3： y轴相关定制</p><ul><li>不显示y轴线和相关刻度</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//不显示y轴线条axisLine: &#123;    show: false        &#125;,// 不显示刻度axisTick: &#123;   show: false&#125;,</span><br></code></pre></td></tr></table></figure><ul><li>y轴文字的颜色设置为白色</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">axisLabel: &#123;          <span class="hljs-attr">color</span>: <span class="hljs-string">&quot;#fff&quot;</span>   &#125;,<br></code></pre></td></tr></table></figure><p>需求4： 修改第一组柱子相关样式（条状）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">name: <span class="hljs-string">&quot;条&quot;</span>,<span class="hljs-comment">// 柱子之间的距离barCategoryGap: 50,//柱子的宽度barWidth: 10,// 柱子设为圆角itemStyle: &#123;    normal: &#123;      barBorderRadius: 20,           &#125;&#125;,</span><br></code></pre></td></tr></table></figure><ul><li>设置第一组柱子内百分比显示数据</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 图形上的文本标签label: &#123;    normal: &#123;         show: true,         // 图形内显示         position: &quot;inside&quot;,         // 文字的显示格式         formatter: &quot;&#123;c&#125;%&quot;     &#125;&#125;,</span><br></code></pre></td></tr></table></figure><ul><li>设置第一组柱子不同颜色</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 声明颜色数组var myColor = [&quot;#1089E7&quot;, &quot;#F57474&quot;, &quot;#56D0E3&quot;, &quot;#F8B448&quot;, &quot;#8B78F6&quot;];// 2. 给 itemStyle  里面的color 属性设置一个 返回值函数  itemStyle: &#123;          normal: &#123;            barBorderRadius: 20,              // params 传进来的是柱子对象            console.log(params);            // dataIndex 是当前柱子的索引号            return myColor[params.dataIndex];          &#125;         &#125;,</span><br></code></pre></td></tr></table></figure><p>需求5： 修改第二组柱子的相关配置（框状）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">name: <span class="hljs-string">&quot;框&quot;</span>,        <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;bar&quot;</span>,        <span class="hljs-attr">barCategoryGap</span>: <span class="hljs-number">50</span>,        <span class="hljs-attr">barWidth</span>: <span class="hljs-number">15</span>,        <span class="hljs-attr">itemStyle</span>: &#123;            <span class="hljs-attr">color</span>: <span class="hljs-string">&quot;none&quot;</span>,            <span class="hljs-attr">borderColor</span>: <span class="hljs-string">&quot;#00c1de&quot;</span>,            <span class="hljs-attr">borderWidth</span>: <span class="hljs-number">3</span>,            <span class="hljs-attr">barBorderRadius</span>: <span class="hljs-number">15</span>        &#125;,        <span class="hljs-attr">data</span>: [<span class="hljs-number">19325</span>, <span class="hljs-number">23438</span>, <span class="hljs-number">31000</span>, <span class="hljs-number">121594</span>, <span class="hljs-number">134141</span>, <span class="hljs-number">681807</span>]      &#125;<br></code></pre></td></tr></table></figure><p>需求6： 给y轴添加第二组数据</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">yAxis: [      &#123;      <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;category&quot;</span>,      <span class="hljs-attr">data</span>: [<span class="hljs-string">&quot;印尼&quot;</span>, <span class="hljs-string">&quot;美国&quot;</span>, <span class="hljs-string">&quot;印度&quot;</span>, <span class="hljs-string">&quot;中国&quot;</span>, <span class="hljs-string">&quot;世界人口(万)&quot;</span>],      <span class="hljs-comment">// 不显示y轴的线      axisLine: &#123;        show: false      &#125;,      // 不显示刻度      axisTick: &#123;        show: false      &#125;,      // 把刻度标签里面的文字颜色设置为白色      axisLabel: &#123;        color: &quot;#fff&quot;      &#125;    &#125;,      &#123;        show: true,        data: [702, 350, 610, 793, 664],           // 不显示y轴的线      axisLine: &#123;        show: false      &#125;,      // 不显示刻度      axisTick: &#123;        show: false      &#125;,        axisLabel: &#123;          textStyle: &#123;            fontSize: 12,            color: &quot;#fff&quot;          &#125;        &#125;      &#125;    ],</span><br></code></pre></td></tr></table></figure><p>需求7： 设置两组柱子层叠以及更换数据</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 给series  第一个对象里面的 添加 yAxisIndex: 0,// 给series  第二个对象里面的 添加 yAxisIndex: 1,// series 第一个对象里面的datadata: [70, 34, 60, 78, 69],// series 第二个对象里面的datadata: [100, 100, 100, 100, 100],// y轴更换第一个对象更换data数据data: [&quot;HTML5&quot;, &quot;CSS3&quot;, &quot;javascript&quot;, &quot;VUE&quot;, &quot;NODE&quot;],// y轴更换第二个对象更换data数据data:[702, 350, 610, 793, 664],</span><br></code></pre></td></tr></table></figure><p>完整代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 柱状图2(function() &#123;  var myColor = [&quot;#1089E7&quot;, &quot;#F57474&quot;, &quot;#56D0E3&quot;, &quot;#F8B448&quot;, &quot;#8B78F6&quot;];  // 1. 实例化对象  var myChart = echarts.init(document.querySelector(&quot;.bar2 .chart&quot;));  // 2. 指定配置和数据  var option = &#123;    grid: &#123;      top: &quot;10%&quot;,      left: &quot;22%&quot;,      bottom: &quot;10%&quot;      // containLabel: true    &#125;,    // 不显示x轴的相关信息    xAxis: &#123;      show: false    &#125;,    yAxis: [      &#123;        type: &quot;category&quot;,        inverse: true,        data: [&quot;HTML5&quot;, &quot;CSS3&quot;, &quot;javascript&quot;, &quot;VUE&quot;, &quot;NODE&quot;],        // 不显示y轴的线        axisLine: &#123;          show: false        &#125;,        // 不显示刻度        axisTick: &#123;          show: false        &#125;,        // 把刻度标签里面的文字颜色设置为白色        axisLabel: &#123;          color: &quot;#fff&quot;        &#125;      &#125;,      &#123;        data: [702, 350, 610, 793, 664],        inverse: true,        // 不显示y轴的线        axisLine: &#123;          show: false        &#125;,        // 不显示刻度        axisTick: &#123;          show: false        &#125;,        // 把刻度标签里面的文字颜色设置为白色        axisLabel: &#123;          color: &quot;#fff&quot;        &#125;      &#125;    ],    series: [      &#123;        name: &quot;条&quot;,        type: &quot;bar&quot;,        data: [70, 34, 60, 78, 69],        yAxisIndex: 0,        // 修改第一组柱子的圆角        itemStyle: &#123;          barBorderRadius: 20,          // 此时的color 可以修改柱子的颜色          color: function(params) &#123;            // params 传进来的是柱子对象            console.log(params);            // dataIndex 是当前柱子的索引号            return myColor[params.dataIndex];          &#125;        &#125;,        // 柱子之间的距离        barCategoryGap: 50,        //柱子的宽度        barWidth: 10,        // 显示柱子内的文字        label: &#123;          show: true,          position: &quot;inside&quot;,          // &#123;c&#125; 会自动的解析为 数据  data里面的数据          formatter: &quot;&#123;c&#125;%&quot;        &#125;      &#125;,      &#123;        name: &quot;框&quot;,        type: &quot;bar&quot;,        barCategoryGap: 50,        barWidth: 15,        yAxisIndex: 1,        data: [100, 100, 100, 100, 100],        itemStyle: &#123;          color: &quot;none&quot;,          borderColor: &quot;#00c1de&quot;,          borderWidth: 3,          barBorderRadius: 15        &#125;      &#125;    ]  &#125;;  // 3. 把配置给实例对象  myChart.setOption(option);&#125;)();</span><br></code></pre></td></tr></table></figure><h3 id="14-折线图1-人员变化模块制作"><a href="#14-折线图1-人员变化模块制作" class="headerlink" title="14-折线图1 人员变化模块制作"></a>14-折线图1 人员变化模块制作</h3><ul><li>官网找到类似实例， 适当分析，并且引入到HTML页面中</li><li>根据需求定制图表</li></ul><p>需求1： 修改折线图大小，显示边框设置颜色：#012f4a，并且显示刻度标签。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 设置网格样式</span><br>grid: &#123; <br>  top: <span class="hljs-string">&#x27;20%&#x27;</span>,<br>  left: <span class="hljs-string">&#x27;3%&#x27;</span>,<br>  right: <span class="hljs-string">&#x27;4%&#x27;</span>,<br>  bottom: <span class="hljs-string">&#x27;3%&#x27;</span>,<br>  show: <span class="hljs-literal">true</span>,<span class="hljs-comment">// 显示边框</span><br>  borderColor: <span class="hljs-string">&#x27;#012f4a&#x27;</span>,<span class="hljs-comment">// 边框颜色</span><br>  containLabel: <span class="hljs-literal">true</span> <span class="hljs-comment">// 包含刻度文字在内</span><br>&#125;,<br></code></pre></td></tr></table></figure><p>需求2： 修改图例组件中的文字颜色 #4c9bfd， 距离右侧 right 为 10%</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 图例组件</span><br>   legend: &#123;<br>     textStyle: &#123;<br>       color: <span class="hljs-string">&#x27;#4c9bfd&#x27;</span> <span class="hljs-comment">// 图例文字颜色</span><br>     &#125;,<br>     right: <span class="hljs-string">&#x27;10%&#x27;</span> <span class="hljs-comment">// 距离右边10%</span><br>   &#125;,<br></code></pre></td></tr></table></figure><p>需求3： x轴相关配置</p><ul><li>刻度去除</li><li>x轴刻度标签字体颜色：#4c9bfd</li><li>剔除x坐标轴线颜色（将来使用Y轴分割线)</li><li>轴两端是不需要内间距 boundaryGap</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs javascript"> xAxis: &#123;<br>   type: <span class="hljs-string">&#x27;category&#x27;</span>,<br>   data: [<span class="hljs-string">&quot;周一&quot;</span>, <span class="hljs-string">&quot;周二&quot;</span>],<br>axisTick: &#123;<br>      show: <span class="hljs-literal">false</span> <span class="hljs-comment">// 去除刻度线</span><br>    &#125;,<br>    axisLabel: &#123;<br>      color: <span class="hljs-string">&#x27;#4c9bfd&#x27;</span> <span class="hljs-comment">// 文本颜色</span><br>    &#125;,<br>    axisLine: &#123;<br>      show: <span class="hljs-literal">false</span> <span class="hljs-comment">// 去除轴线</span><br>    &#125;,<br>    boundaryGap: <span class="hljs-literal">false</span>  <span class="hljs-comment">// 去除轴内间距</span><br> &#125;,<br></code></pre></td></tr></table></figure><p>需求4： y轴的定制</p><ul><li>刻度去除</li><li>字体颜色：#4c9bfd</li><li>分割线颜色：#012f4a</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs javascript">yAxis: &#123;<br>  type: <span class="hljs-string">&#x27;value&#x27;</span>,<br>  axisTick: &#123;<br>    show: <span class="hljs-literal">false</span>  <span class="hljs-comment">// 去除刻度</span><br>  &#125;,<br>  axisLabel: &#123;<br>    color: <span class="hljs-string">&#x27;#4c9bfd&#x27;</span> <span class="hljs-comment">// 文字颜色</span><br>  &#125;,<br>  splitLine: &#123;<br>    lineStyle: &#123;<br>      color: <span class="hljs-string">&#x27;#012f4a&#x27;</span> <span class="hljs-comment">// 分割线颜色</span><br>    &#125;<br>  &#125;<br>&#125;,<br></code></pre></td></tr></table></figure><p>需求5： 两条线形图定制</p><ul><li>颜色分别：#00f2f1  #ed3f35</li><li>把折线修饰为圆滑 series 数据中添加 smooth 为 true</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">color: [<span class="hljs-string">&#x27;#00f2f1&#x27;</span>, <span class="hljs-string">&#x27;#ed3f35&#x27;</span>],<span class="hljs-attr">series</span>: [&#123;      <span class="hljs-attr">name</span>:<span class="hljs-string">&#x27;新增粉丝&#x27;</span>,      <span class="hljs-attr">data</span>: [<span class="hljs-number">820</span>, <span class="hljs-number">932</span>, <span class="hljs-number">901</span>, <span class="hljs-number">934</span>, <span class="hljs-number">1290</span>, <span class="hljs-number">1330</span>, <span class="hljs-number">1320</span>],      <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;line&#x27;</span>,      <span class="hljs-comment">// 折线修饰为圆滑      smooth: true,      &#125;,&#123;      name:&#x27;新增游客&#x27;,      data: [100, 331, 200, 123, 233, 543, 400],      type: &#x27;line&#x27;,      smooth: true,    &#125;]</span><br></code></pre></td></tr></table></figure><p>需求6： 配置数据</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// x轴的文字xAxis: &#123;  type: &#x27;category&#x27;,  data: [&#x27;1月&#x27;, &#x27;2月&#x27;, &#x27;3月&#x27;, &#x27;4月&#x27;, &#x27;5月&#x27;, &#x27;6月&#x27;, &#x27;7月&#x27;, &#x27;8月&#x27;, &#x27;9月&#x27;, &#x27;10月&#x27;, &#x27;11月&#x27;, &#x27;12月&#x27;],</span><br></code></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 图标数据    series: [&#123;      name:&#x27;新增粉丝&#x27;,      data:  [24, 40, 101, 134, 90, 230, 210, 230, 120, 230, 210, 120],      type: &#x27;line&#x27;,      smooth: true    &#125;,&#123;      name:&#x27;新增游客&#x27;,      data: [40, 64, 191, 324, 290, 330, 310, 213, 180, 200, 180, 79],           type: &#x27;line&#x27;,      smooth: true      &#125;    &#125;]</span><br></code></pre></td></tr></table></figure><p>需求7： 新增需求  点击 2020年   2021年 数据发生变化</p><p>以下是后台送过来数据（ajax请求过来的）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> yearData = [      &#123;        <span class="hljs-attr">year</span>: <span class="hljs-string">&#x27;2020&#x27;</span>,  <span class="hljs-comment">// 年份        data: [  // 两个数组是因为有两条线             [24, 40, 101, 134, 90, 230, 210, 230, 120, 230, 210, 120],             [40, 64, 191, 324, 290, 330, 310, 213, 180, 200, 180, 79]          ]      &#125;,      &#123;        year: &#x27;2021&#x27;,  // 年份        data: [  // 两个数组是因为有两条线             [123, 175, 112, 197, 121, 67, 98, 21, 43, 64, 76, 38],     [143, 131, 165, 123, 178, 21, 82, 64, 43, 60, 19, 34]          ]      &#125;     ];</span><br></code></pre></td></tr></table></figure><ul><li>tab栏切换事件</li><li>点击2020按钮   需要把 series 第一个对象里面的data  换成  2020年对象里面data[0] </li><li>点击2020按钮   需要把 series 第二个对象里面的data  换成  2020年对象里面data[1] </li><li>2021 按钮同样道理</li></ul><p>完整代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 折线图1模块制作</span><br>(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;<br>  <span class="hljs-keyword">var</span> yearData = [<br>    &#123;<br>      year: <span class="hljs-string">&quot;2020&quot;</span>, <span class="hljs-comment">// 年份</span><br>      data: [<br>        <span class="hljs-comment">// 两个数组是因为有两条线</span><br>        [<span class="hljs-number">24</span>, <span class="hljs-number">40</span>, <span class="hljs-number">101</span>, <span class="hljs-number">134</span>, <span class="hljs-number">90</span>, <span class="hljs-number">230</span>, <span class="hljs-number">210</span>, <span class="hljs-number">230</span>, <span class="hljs-number">120</span>, <span class="hljs-number">230</span>, <span class="hljs-number">210</span>, <span class="hljs-number">120</span>],<br>        [<span class="hljs-number">40</span>, <span class="hljs-number">64</span>, <span class="hljs-number">191</span>, <span class="hljs-number">324</span>, <span class="hljs-number">290</span>, <span class="hljs-number">330</span>, <span class="hljs-number">310</span>, <span class="hljs-number">213</span>, <span class="hljs-number">180</span>, <span class="hljs-number">200</span>, <span class="hljs-number">180</span>, <span class="hljs-number">79</span>]<br>      ]<br>    &#125;,<br>    &#123;<br>      year: <span class="hljs-string">&quot;2021&quot;</span>, <span class="hljs-comment">// 年份</span><br>      data: [<br>        <span class="hljs-comment">// 两个数组是因为有两条线</span><br>        [<span class="hljs-number">123</span>, <span class="hljs-number">175</span>, <span class="hljs-number">112</span>, <span class="hljs-number">197</span>, <span class="hljs-number">121</span>, <span class="hljs-number">67</span>, <span class="hljs-number">98</span>, <span class="hljs-number">21</span>, <span class="hljs-number">43</span>, <span class="hljs-number">64</span>, <span class="hljs-number">76</span>, <span class="hljs-number">38</span>],<br>        [<span class="hljs-number">143</span>, <span class="hljs-number">131</span>, <span class="hljs-number">165</span>, <span class="hljs-number">123</span>, <span class="hljs-number">178</span>, <span class="hljs-number">21</span>, <span class="hljs-number">82</span>, <span class="hljs-number">64</span>, <span class="hljs-number">43</span>, <span class="hljs-number">60</span>, <span class="hljs-number">19</span>, <span class="hljs-number">34</span>]<br>      ]<br>    &#125;<br>  ];<br>  <span class="hljs-comment">// 1. 实例化对象</span><br>  <span class="hljs-keyword">var</span> myChart = echarts.init(<span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&quot;.line .chart&quot;</span>));<br>  <span class="hljs-comment">// 2.指定配置</span><br>  <span class="hljs-keyword">var</span> option = &#123;<br>    <span class="hljs-comment">// 通过这个color修改两条线的颜色</span><br>    color: [<span class="hljs-string">&quot;#00f2f1&quot;</span>, <span class="hljs-string">&quot;#ed3f35&quot;</span>],<br>    tooltip: &#123;<br>      trigger: <span class="hljs-string">&quot;axis&quot;</span><br>    &#125;,<br>    legend: &#123;<br>      <span class="hljs-comment">// 如果series 对象有name 值，则 legend可以不用写data</span><br>      <span class="hljs-comment">// 修改图例组件 文字颜色</span><br>      textStyle: &#123;<br>        color: <span class="hljs-string">&quot;#4c9bfd&quot;</span><br>      &#125;,<br>      <span class="hljs-comment">// 这个10% 必须加引号</span><br>      right: <span class="hljs-string">&quot;10%&quot;</span><br>    &#125;,<br>    grid: &#123;<br>      top: <span class="hljs-string">&quot;20%&quot;</span>,<br>      left: <span class="hljs-string">&quot;3%&quot;</span>,<br>      right: <span class="hljs-string">&quot;4%&quot;</span>,<br>      bottom: <span class="hljs-string">&quot;3%&quot;</span>,<br>      show: <span class="hljs-literal">true</span>, <span class="hljs-comment">// 显示边框</span><br>      borderColor: <span class="hljs-string">&quot;#012f4a&quot;</span>, <span class="hljs-comment">// 边框颜色</span><br>      containLabel: <span class="hljs-literal">true</span> <span class="hljs-comment">// 包含刻度文字在内</span><br>    &#125;,<br><br>    xAxis: &#123;<br>      type: <span class="hljs-string">&quot;category&quot;</span>,<br>      boundaryGap: <span class="hljs-literal">false</span>,<br>      data: [<br>        <span class="hljs-string">&quot;1月&quot;</span>,<br>        <span class="hljs-string">&quot;2月&quot;</span>,<br>        <span class="hljs-string">&quot;3月&quot;</span>,<br>        <span class="hljs-string">&quot;4月&quot;</span>,<br>        <span class="hljs-string">&quot;5月&quot;</span>,<br>        <span class="hljs-string">&quot;6月&quot;</span>,<br>        <span class="hljs-string">&quot;7月&quot;</span>,<br>        <span class="hljs-string">&quot;8月&quot;</span>,<br>        <span class="hljs-string">&quot;9月&quot;</span>,<br>        <span class="hljs-string">&quot;10月&quot;</span>,<br>        <span class="hljs-string">&quot;11月&quot;</span>,<br>        <span class="hljs-string">&quot;12月&quot;</span><br>      ],<br>      axisTick: &#123;<br>        show: <span class="hljs-literal">false</span> <span class="hljs-comment">// 去除刻度线</span><br>      &#125;,<br>      axisLabel: &#123;<br>        color: <span class="hljs-string">&quot;#4c9bfd&quot;</span> <span class="hljs-comment">// 文本颜色</span><br>      &#125;,<br>      axisLine: &#123;<br>        show: <span class="hljs-literal">false</span> <span class="hljs-comment">// 去除轴线</span><br>      &#125;<br>    &#125;,<br>    yAxis: &#123;<br>      type: <span class="hljs-string">&quot;value&quot;</span>,<br>      axisTick: &#123;<br>        show: <span class="hljs-literal">false</span> <span class="hljs-comment">// 去除刻度线</span><br>      &#125;,<br>      axisLabel: &#123;<br>        color: <span class="hljs-string">&quot;#4c9bfd&quot;</span> <span class="hljs-comment">// 文本颜色</span><br>      &#125;,<br>      axisLine: &#123;<br>        show: <span class="hljs-literal">false</span> <span class="hljs-comment">// 去除轴线</span><br>      &#125;,<br>      splitLine: &#123;<br>        lineStyle: &#123;<br>          color: <span class="hljs-string">&quot;#012f4a&quot;</span> <span class="hljs-comment">// 分割线颜色</span><br>        &#125;<br>      &#125;<br>    &#125;,<br>    series: [<br>      &#123;<br>        name: <span class="hljs-string">&quot;新增粉丝&quot;</span>,<br>        type: <span class="hljs-string">&quot;line&quot;</span>,<br>        <span class="hljs-comment">// true 可以让我们的折线显示带有弧度</span><br>        smooth: <span class="hljs-literal">true</span>,<br>        data: yearData[<span class="hljs-number">0</span>].data[<span class="hljs-number">0</span>]<br>      &#125;,<br>      &#123;<br>        name: <span class="hljs-string">&quot;新增游客&quot;</span>,<br>        type: <span class="hljs-string">&quot;line&quot;</span>,<br>        smooth: <span class="hljs-literal">true</span>,<br>        data: yearData[<span class="hljs-number">0</span>].data[<span class="hljs-number">1</span>]<br>      &#125;<br>    ]<br>  &#125;;<br><br>  <span class="hljs-comment">// 3. 把配置给实例对象</span><br>  myChart.setOption(option);<br>  <span class="hljs-comment">// 4. 让图表跟随屏幕自动的去适应</span><br>  <span class="hljs-built_in">window</span>.addEventListener(<span class="hljs-string">&quot;resize&quot;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;<br>    myChart.resize();<br>  &#125;);<br><br>  <span class="hljs-comment">// 5.点击切换效果</span><br>  $(<span class="hljs-string">&quot;.line h2&quot;</span>).on(<span class="hljs-string">&quot;click&quot;</span>, <span class="hljs-string">&quot;a&quot;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-comment">// alert(1);</span><br>    <span class="hljs-comment">// console.log($(this).index());</span><br>    <span class="hljs-comment">// 点击 a 之后 根据当前a的索引号 找到对应的 yearData的相关对象</span><br>    <span class="hljs-comment">// console.log(yearData[$(this).index()]);</span><br>    <span class="hljs-keyword">var</span> obj = yearData[$(<span class="hljs-built_in">this</span>).index()];<br>    option.series[<span class="hljs-number">0</span>].data = obj.data[<span class="hljs-number">0</span>];<br>    option.series[<span class="hljs-number">1</span>].data = obj.data[<span class="hljs-number">1</span>];<br>    <span class="hljs-comment">// 需要重新渲染</span><br>    myChart.setOption(option);<br>  &#125;);<br>&#125;)();<br></code></pre></td></tr></table></figure><h3 id="15-折线图2-播放量模块制作"><a href="#15-折线图2-播放量模块制作" class="headerlink" title="15-折线图2 播放量模块制作"></a>15-折线图2 播放量模块制作</h3><ul><li>官网找到类似实例， 适当分析，并且引入到HTML页面中</li><li>根据需求定制图表</li></ul><p>需求1： 更换图例组件文字颜色 rgba(255,255,255,.5)  文字大小为12</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"> legend: &#123;<br>      top: <span class="hljs-string">&quot;0%&quot;</span>,<br>      textStyle: &#123;<br>        color: <span class="hljs-string">&quot;rgba(255,255,255,.5)&quot;</span>,<br>        fontSize: <span class="hljs-string">&quot;12&quot;</span><br>      &#125;<br>&#125;,<br></code></pre></td></tr></table></figure><p>需求2： 修改图表大小</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript">grid: &#123;<br>      left: <span class="hljs-string">&quot;10&quot;</span>,<br>      top: <span class="hljs-string">&quot;30&quot;</span>,<br>      right: <span class="hljs-string">&quot;10&quot;</span>,<br>      bottom: <span class="hljs-string">&quot;10&quot;</span>,<br>      containLabel: <span class="hljs-literal">true</span><br>    &#125;,<br></code></pre></td></tr></table></figure><p>需求3： 修改x轴相关配置</p><ul><li>修改文本颜色为rgba(255,255,255,.6)  文字大小为 12</li><li>x轴线的颜色为   rgba(255,255,255,.2)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 文本颜色为rgba(255,255,255,.6)  文字大小为 12     axisLabel: &#123;          textStyle: &#123;            color: &quot;rgba(255,255,255,.6)&quot;,            fontSize: 12          &#125;        &#125;,         // x轴线的颜色为   rgba(255,255,255,.2)        axisLine: &#123;          lineStyle: &#123;            color: &quot;rgba(255,255,255,.2)&quot;          &#125;        &#125;,</span><br></code></pre></td></tr></table></figure><p>需求4： 修改y轴的相关配置</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">axisTick: &#123; <span class="hljs-attr">show</span>: <span class="hljs-literal">false</span> &#125;,        <span class="hljs-attr">axisLine</span>: &#123;          <span class="hljs-attr">lineStyle</span>: &#123;            <span class="hljs-attr">color</span>: <span class="hljs-string">&quot;rgba(255,255,255,.1)&quot;</span>          &#125;        &#125;,        <span class="hljs-attr">axisLabel</span>: &#123;          <span class="hljs-attr">textStyle</span>: &#123;            <span class="hljs-attr">color</span>: <span class="hljs-string">&quot;rgba(255,255,255,.6)&quot;</span>,            <span class="hljs-attr">fontSize</span>: <span class="hljs-number">12</span>          &#125;        &#125;,   <span class="hljs-comment">// 修改分割线的颜色        splitLine: &#123;          lineStyle: &#123;            color: &quot;rgba(255,255,255,.1)&quot;          &#125;        &#125;      </span><br></code></pre></td></tr></table></figure><p>需求5： 修改两个线模块配置(注意在series 里面定制)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//第一条 线是圆滑</span><br>smooth: <span class="hljs-literal">true</span>,<br> <span class="hljs-comment">// 单独修改线的样式</span><br> lineStyle: &#123;<br>     color: <span class="hljs-string">&quot;#0184d5&quot;</span>,<br>     width: <span class="hljs-number">2</span> <br> &#125;,<br>  <span class="hljs-comment">// 填充区域</span><br> areaStyle: &#123;<br>       <span class="hljs-comment">// 渐变色，只需要复制即可</span><br>     color: <span class="hljs-keyword">new</span> echarts.graphic.LinearGradient(<br>       <span class="hljs-number">0</span>,<br>       <span class="hljs-number">0</span>,<br>       <span class="hljs-number">0</span>,<br>       <span class="hljs-number">1</span>,<br>       [<br>         &#123;<br>           offset: <span class="hljs-number">0</span>,<br>           color: <span class="hljs-string">&quot;rgba(1, 132, 213, 0.4)&quot;</span>   <span class="hljs-comment">// 渐变色的起始颜色</span><br>         &#125;,<br>         &#123;<br>           offset: <span class="hljs-number">0.8</span>,<br>           color: <span class="hljs-string">&quot;rgba(1, 132, 213, 0.1)&quot;</span>   <span class="hljs-comment">// 渐变线的结束颜色</span><br>         &#125;<br>       ],<br>       <span class="hljs-literal">false</span><br>     ),<br>     shadowColor: <span class="hljs-string">&quot;rgba(0, 0, 0, 0.1)&quot;</span><br> &#125;,<br> <span class="hljs-comment">// 设置拐点 小圆点</span><br> symbol: <span class="hljs-string">&quot;circle&quot;</span>,<br> <span class="hljs-comment">// 拐点大小</span><br> symbolSize: <span class="hljs-number">8</span>,<br> <span class="hljs-comment">// 设置拐点颜色以及边框</span><br>itemStyle: &#123;<br>     color: <span class="hljs-string">&quot;#0184d5&quot;</span>,<br>     borderColor: <span class="hljs-string">&quot;rgba(221, 220, 107, .1)&quot;</span>,<br>     borderWidth: <span class="hljs-number">12</span><br> &#125;,<br> <span class="hljs-comment">// 开始不显示拐点， 鼠标经过显示</span><br> showSymbol: <span class="hljs-literal">false</span>,<br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs javascript">name: <span class="hljs-string">&quot;转发量&quot;</span>,<br> type: <span class="hljs-string">&quot;line&quot;</span>,<br> smooth: <span class="hljs-literal">true</span>,<br> lineStyle: &#123;<br>   normal: &#123;<br>     color: <span class="hljs-string">&quot;#00d887&quot;</span>,<br>     width: <span class="hljs-number">2</span><br>   &#125;<br>  &#125;,<br>  areaStyle: &#123;<br>   normal: &#123;<br>     color: <span class="hljs-keyword">new</span> echarts.graphic.LinearGradient(<br>       <span class="hljs-number">0</span>,<br>       <span class="hljs-number">0</span>,<br>       <span class="hljs-number">0</span>,<br>       <span class="hljs-number">1</span>,<br>       [<br>         &#123;<br>           offset: <span class="hljs-number">0</span>,<br>           color: <span class="hljs-string">&quot;rgba(0, 216, 135, 0.4)&quot;</span><br>         &#125;,<br>         &#123;<br>           offset: <span class="hljs-number">0.8</span>,<br>           color: <span class="hljs-string">&quot;rgba(0, 216, 135, 0.1)&quot;</span><br>         &#125;<br>       ],<br>       <span class="hljs-literal">false</span><br>     ),<br>     shadowColor: <span class="hljs-string">&quot;rgba(0, 0, 0, 0.1)&quot;</span><br>   &#125;<br> &#125;,<br> <span class="hljs-comment">// 设置拐点 小圆点</span><br> symbol: <span class="hljs-string">&quot;circle&quot;</span>,<br> <span class="hljs-comment">// 拐点大小</span><br> symbolSize: <span class="hljs-number">5</span>,<br> <span class="hljs-comment">// 设置拐点颜色以及边框</span><br>  itemStyle: &#123;<br>     color: <span class="hljs-string">&quot;#00d887&quot;</span>,<br>     borderColor: <span class="hljs-string">&quot;rgba(221, 220, 107, .1)&quot;</span>,<br>     borderWidth: <span class="hljs-number">12</span><br> &#125;,<br> <span class="hljs-comment">// 开始不显示拐点， 鼠标经过显示</span><br> showSymbol: <span class="hljs-literal">false</span>,<br></code></pre></td></tr></table></figure><p>需求6： 更换数据</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// x轴更换数据data: [ &quot;01&quot;,&quot;02&quot;,&quot;03&quot;,&quot;04&quot;,&quot;05&quot;,&quot;06&quot;,&quot;07&quot;,&quot;08&quot;,&quot;09&quot;,&quot;10&quot;,&quot;11&quot;,&quot;12&quot;,&quot;13&quot;,&quot;14&quot;,&quot;15&quot;,&quot;16&quot;,&quot;17&quot;,&quot;18&quot;,&quot;19&quot;,&quot;20&quot;,&quot;21&quot;,&quot;22&quot;,&quot;23&quot;,&quot;24&quot;,&quot;25&quot;,&quot;26&quot;,&quot;26&quot;,&quot;28&quot;,&quot;29&quot;,&quot;30&quot;],// series  第一个对象data数据 data: [ 30, 40, 30, 40,30, 40, 30,60,20, 40, 30, 40, 30, 40,30, 40, 30,60,20, 40, 30, 40, 30, 40,30, 40, 20,60,50, 40],// series  第二个对象data数据 data: [ 130, 10, 20, 40,30, 40, 80,60,20, 40, 90, 40,20, 140,30, 40, 130,20,20, 40, 80, 70, 30, 40,30, 120, 20,99,50, 20],</span><br></code></pre></td></tr></table></figure><h3 id="16-饼形图-1年龄分布模块制作"><a href="#16-饼形图-1年龄分布模块制作" class="headerlink" title="16-饼形图 1年龄分布模块制作"></a>16-饼形图 1年龄分布模块制作</h3><ul><li>官网找到类似实例， 适当分析，并且引入到HTML页面中</li><li>根据需求定制图表</li></ul><p>定制图表需求1： </p><ul><li>修改图例组件在底部并且居中显示。 </li><li>每个小图标的宽度和高度修改为 10px   </li><li>文字大小为12 颜色  rgba(255,255,255,.5)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs javascript">legend: &#123;<br>     <span class="hljs-comment">// 距离底部为0%</span><br>     bottom: <span class="hljs-string">&quot;0%&quot;</span>,<br>     <span class="hljs-comment">// 小图标的宽度和高度</span><br>     itemWidth: <span class="hljs-number">10</span>,<br>     itemHeight: <span class="hljs-number">10</span>,<br>     data: [<span class="hljs-string">&#x27;直接访问&#x27;</span>, <span class="hljs-string">&#x27;邮件营销&#x27;</span>, <span class="hljs-string">&#x27;联盟广告&#x27;</span>, <span class="hljs-string">&#x27;视频广告&#x27;</span>, <span class="hljs-string">&#x27;搜索引擎&#x27;</span>],<br>     <span class="hljs-comment">// 修改图例组件的文字为 12px</span><br>     textStyle: &#123;<br>       color: <span class="hljs-string">&quot;rgba(255,255,255,.5)&quot;</span>,<br>       fontSize: <span class="hljs-string">&quot;12&quot;</span><br>     &#125;<br>&#125;,<br></code></pre></td></tr></table></figure><p>定制需求2：</p><ul><li>修改水平居中 垂直居中</li><li>修改内圆半径和外圆半径为    [“40%”, “60%”]   pink老师友情提示，带有直角坐标系的比如折线图柱状图是 grid修改图形大小，而我们饼形图是通过 radius 修改大小</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs javascript">series: [<br>      &#123;<br>        name: <span class="hljs-string">&quot;年龄分布&quot;</span>,<br>        type: <span class="hljs-string">&quot;pie&quot;</span>,<br>        <span class="hljs-comment">// 设置饼形图在容器中的位置</span><br>        center: [<span class="hljs-string">&quot;50%&quot;</span>, <span class="hljs-string">&quot;50%&quot;</span>],<br>        <span class="hljs-comment">//  修改内圆半径和外圆半径为  百分比是相对于容器宽度来说的</span><br>        radius: [<span class="hljs-string">&quot;40%&quot;</span>, <span class="hljs-string">&quot;60%&quot;</span>],<br>        <span class="hljs-comment">// 不显示标签文字</span><br>        label: &#123; <span class="hljs-attr">show</span>: <span class="hljs-literal">false</span> &#125;,<br>        <span class="hljs-comment">// 不显示连接线</span><br>        labelLine: &#123; <span class="hljs-attr">show</span>: <span class="hljs-literal">false</span> &#125;,<br>      &#125;<br>    ]<br></code></pre></td></tr></table></figure><p>定制需求3：更换数据</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// legend 中的data  可省略</span><br>data: [<span class="hljs-string">&quot;0岁以下&quot;</span>, <span class="hljs-string">&quot;20-29岁&quot;</span>, <span class="hljs-string">&quot;30-39岁&quot;</span>, <span class="hljs-string">&quot;40-49岁&quot;</span>, <span class="hljs-string">&quot;50岁以上&quot;</span>],<br><span class="hljs-comment">//  series 中的数据</span><br> data: [<br>          &#123; <span class="hljs-attr">value</span>: <span class="hljs-number">1</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;0岁以下&quot;</span> &#125;,<br>          &#123; <span class="hljs-attr">value</span>: <span class="hljs-number">4</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;20-29岁&quot;</span> &#125;,<br>          &#123; <span class="hljs-attr">value</span>: <span class="hljs-number">2</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;30-39岁&quot;</span> &#125;,<br>          &#123; <span class="hljs-attr">value</span>: <span class="hljs-number">2</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;40-49岁&quot;</span> &#125;,<br>          &#123; <span class="hljs-attr">value</span>: <span class="hljs-number">1</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;50岁以上&quot;</span> &#125;<br> ] ,<br></code></pre></td></tr></table></figure><p>定制需求4： 更换颜色</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript">color: [<br>          <span class="hljs-string">&quot;#065aab&quot;</span>,<br>          <span class="hljs-string">&quot;#066eab&quot;</span>,<br>          <span class="hljs-string">&quot;#0682ab&quot;</span>,<br>          <span class="hljs-string">&quot;#0696ab&quot;</span>,<br>          <span class="hljs-string">&quot;#06a0ab&quot;</span>,<br>        ],<br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 4. 让图表跟随屏幕自动的去适应  window.addEventListener(&quot;resize&quot;, function() &#123;    myChart.resize();  &#125;);</span><br></code></pre></td></tr></table></figure><h3 id="17-饼形图2-地区分布模块制作（南丁格尔玫瑰图）"><a href="#17-饼形图2-地区分布模块制作（南丁格尔玫瑰图）" class="headerlink" title="17-饼形图2 地区分布模块制作（南丁格尔玫瑰图）"></a>17-饼形图2 地区分布模块制作（南丁格尔玫瑰图）</h3><ul><li>官网找到类似实例， 适当分析，并且引入到HTML页面中</li><li>根据需求定制图表</li></ul><p>第二步：按照需求定制</p><ul><li>需求1：颜色设置</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">color: [<span class="hljs-string">&#x27;#006cff&#x27;</span>, <span class="hljs-string">&#x27;#60cda0&#x27;</span>, <span class="hljs-string">&#x27;#ed8884&#x27;</span>, <span class="hljs-string">&#x27;#ff9f7f&#x27;</span>, <span class="hljs-string">&#x27;#0096ff&#x27;</span>, <span class="hljs-string">&#x27;#9fe6b8&#x27;</span>, <span class="hljs-string">&#x27;#32c5e9&#x27;</span>, <span class="hljs-string">&#x27;#1d9dff&#x27;</span>],<br></code></pre></td></tr></table></figure><ul><li>需求2：修改饼形图大小 ( series对象)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">radius: [<span class="hljs-string">&#x27;10%&#x27;</span>, <span class="hljs-string">&#x27;70%&#x27;</span>],<br></code></pre></td></tr></table></figure><ul><li>需求3： 把饼形图的显示模式改为 半径模式</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">roseType: <span class="hljs-string">&quot;radius&quot;</span>,<br></code></pre></td></tr></table></figure><ul><li>需求4：数据使用更换（series对象 里面 data对象）</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs js">&#123; <span class="hljs-attr">value</span>: <span class="hljs-number">20</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;云南&#x27;</span> &#125;,<br>&#123; <span class="hljs-attr">value</span>: <span class="hljs-number">26</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;北京&#x27;</span> &#125;,<br>&#123; <span class="hljs-attr">value</span>: <span class="hljs-number">24</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;山东&#x27;</span> &#125;,<br>&#123; <span class="hljs-attr">value</span>: <span class="hljs-number">25</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;河北&#x27;</span> &#125;,<br>&#123; <span class="hljs-attr">value</span>: <span class="hljs-number">20</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;江苏&#x27;</span> &#125;,<br>&#123; <span class="hljs-attr">value</span>: <span class="hljs-number">25</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;浙江&#x27;</span> &#125;,<br>&#123; <span class="hljs-attr">value</span>: <span class="hljs-number">30</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;四川&#x27;</span> &#125;,<br>&#123; <span class="hljs-attr">value</span>: <span class="hljs-number">42</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;湖北&#x27;</span> &#125;<br></code></pre></td></tr></table></figure><ul><li><p>需求5：字体略小些  10 px ( series对象里面设置 )</p><p>饼图图形上的文本标签可以控制饼形图的文字的一些样式。   label 对象设置</p></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs javascript">series: [<br>      &#123;<br>        name: <span class="hljs-string">&quot;面积模式&quot;</span>,<br>        type: <span class="hljs-string">&quot;pie&quot;</span>,<br>        radius: [<span class="hljs-number">30</span>, <span class="hljs-number">110</span>],<br>        center: [<span class="hljs-string">&quot;50%&quot;</span>, <span class="hljs-string">&quot;50%&quot;</span>],<br>        roseType: <span class="hljs-string">&quot;radius&quot;</span>,<br>        <span class="hljs-comment">// 文本标签控制饼形图文字的相关样式， 注意它是一个对象</span><br>        label: &#123;<br>          fontSize: <span class="hljs-number">10</span><br>        &#125;,<br>      &#125;<br>    ]<br>  &#125;;<br></code></pre></td></tr></table></figure><ul><li>需求6：防止缩放的时候，引导线过长。引导线略短些   (series对象里面的  labelLine  对象设置  ) <ul><li>连接图表 6 px</li><li>连接文字 8 px</li></ul></li></ul><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs diff"><span class="hljs-addition">+        // 文字调整+        label:&#123;+          fontSize: 10+        &#125;,+        // 引导线调整+        labelLine: &#123;+          // 连接扇形图线长+          length: 6,+          // 连接文字线长+          length2: 8+        &#125; +      &#125;+    ],</span><br></code></pre></td></tr></table></figure><ul><li>需求6：浏览器缩放的时候，图表跟着自动适配。</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 监听浏览器缩放，图表对象调用缩放resize函数window.addEventListener(&quot;resize&quot;, function() &#123;    myChart.resize();  &#125;);</span><br></code></pre></td></tr></table></figure><h3 id="18-Echarts-社区介绍"><a href="#18-Echarts-社区介绍" class="headerlink" title="18-Echarts-社区介绍"></a>18-Echarts-社区介绍</h3><blockquote><p><a href="https://gallery.echartsjs.com/explore.html#sort=rank~timeframe=all~author=all">社区</a>就是一些，活跃的echart使用者，交流和贡献定制好的图表的地方。</p></blockquote><p><img src="/2021/06/06/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96Echarts%E6%95%99%E7%A8%8B/../../%25E6%2588%2591%25E7%259A%2584%25E6%25A1%258C%25E9%259D%25A2/%25E7%25AC%2594%25E8%25AE%25B0/docs/media/1576664444951.png" alt="1576664444951"></p><ul><li>在这里可以找到一些基于echart的高度定制好的图表，相当于基于jquery开发的插件，这里是基于echarts开发的第三方的图表。</li></ul><h3 id="19-Echarts-map使用（扩展）"><a href="#19-Echarts-map使用（扩展）" class="headerlink" title="19-Echarts-map使用（扩展）"></a>19-Echarts-map使用（扩展）</h3><p>参考社区的例子：<a href="https://gallery.echartsjs.com/editor.html?c=x0-ExSkZDM">https://gallery.echartsjs.com/editor.html?c=x0-ExSkZDM</a>  (模拟飞机航线)</p><p>实现步骤：</p><ul><li>第一需要下载china.js提供中国地图的js文件</li><li>第二个因为里面代码比较多，我们新建一个新的js文件 myMap.js 引入</li><li>使用社区提供的配置即可。</li></ul><p>需要修改：</p><ul><li>去掉标题组件</li><li>去掉背景颜色</li><li>修改地图省份背景  #142957  areaColor 里面做修改</li><li>地图放大通过  zoom   设置为1.2即可</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs javascript">geo: &#123;<br>  map: <span class="hljs-string">&#x27;china&#x27;</span>,<br>  zoom: <span class="hljs-number">1.2</span>,<br>  label: &#123;<br>    emphasis: &#123;<br>      show: <span class="hljs-literal">false</span><br>    &#125;<br>  &#125;,<br>  roam: <span class="hljs-literal">false</span>,<br>  itemStyle: &#123;<br>    normal: &#123;<br>      areaColor: <span class="hljs-string">&#x27;#142957&#x27;</span>,<br>      borderColor: <span class="hljs-string">&#x27;#0692a4&#x27;</span><br>    &#125;,<br>    emphasis: &#123;<br>      areaColor: <span class="hljs-string">&#x27;#0b1c2d&#x27;</span><br>    &#125;<br>  &#125;<br>&#125;,<br></code></pre></td></tr></table></figure><p>总结：这例子是扩展案例，大家以后可以多看看社区里面的案例。</p><h3 id="20-最后约束缩放"><a href="#20-最后约束缩放" class="headerlink" title="20- 最后约束缩放"></a>20- 最后约束缩放</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-comment">/* 约束屏幕尺寸 */</span><br><span class="hljs-keyword">@media</span> screen <span class="hljs-keyword">and</span> (<span class="hljs-attribute">max-width</span>: <span class="hljs-number">1024px</span>) &#123;<br>  <span class="hljs-selector-tag">html</span> &#123;<br>    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">42px</span> <span class="hljs-meta">!important</span>;<br>  &#125;<br>&#125;<br><span class="hljs-keyword">@media</span> screen <span class="hljs-keyword">and</span> (<span class="hljs-attribute">min-width</span>: <span class="hljs-number">1920px</span>) &#123;<br>  <span class="hljs-selector-tag">html</span> &#123;<br>    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">80px</span> <span class="hljs-meta">!important</span>;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Echarts</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CSS笔记</title>
    <link href="/2021/06/06/CSS%E7%AC%94%E8%AE%B0/"/>
    <url>/2021/06/06/CSS%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h3 id="选择器"><a href="#选择器" class="headerlink" title="选择器"></a>选择器</h3><h6 id="后代选择器-用空格隔开"><a href="#后代选择器-用空格隔开" class="headerlink" title="后代选择器(用空格隔开)"></a>后代选择器(用空格隔开)</h6><figure class="highlight html"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><pre><code class="hljs html">ul ol &#123;<br>style<br>&#125;<br>.nac a &#123;<br><br>&#125;<br></code></pre></td></tr></table></figure><h6 id="子类选择器"><a href="#子类选择器" class="headerlink" title="子类选择器"></a>子类选择器</h6><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html">ul&gt;li&#123;<br>style<br>&#125;<br></code></pre></td></tr></table></figure><h6 id="并集选择器"><a href="#并集选择器" class="headerlink" title="并集选择器"></a>并集选择器</h6><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html">div, h2, .nav li &#123;<br>style<br>&#125;<br></code></pre></td></tr></table></figure><h6 id="伪类选择器"><a href="#伪类选择器" class="headerlink" title="伪类选择器"></a>伪类选择器</h6><ul><li>为确保生效,按照LVHA的顺序声明</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html">a:link 选中未被访问的链接<br>a:visited<br>a:hover选中鼠标滑过的链接<br>a:active<br></code></pre></td></tr></table></figure><ul><li><h6 id="focus选择器"><a href="#focus选择器" class="headerlink" title="-focus选择器"></a>-focus选择器</h6><ul><li>把获得光标的表单元素选取出来 input:focus</li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html">input:focus &#123;<br>background-color: red;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="块级元素-行内元素-行内块元素"><a href="#块级元素-行内元素-行内块元素" class="headerlink" title="块级元素 行内元素  行内块元素"></a>块级元素 行内元素  行内块元素</h3><h6 id="块级元素"><a href="#块级元素" class="headerlink" title="块级元素"></a>块级元素</h6><ul><li>独占一行</li><li>可设置宽高及内外边距</li><li>默认宽度是容器(父级元素) 的100%</li><li>是一个容器及盒子,里面可以放行内或者块级元素</li><li>文字类的元素不能使用块级元素 例如p标签里不能放div</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html">div<br>h1~h6<br>p<br>ul ol li<br></code></pre></td></tr></table></figure><h6 id="行内元素"><a href="#行内元素" class="headerlink" title="行内元素"></a>行内元素</h6><ul><li>相邻行内元素在一行上,一行可以显示多个</li><li>宽高设置是无效的</li><li>默认宽度就是他本身的宽度</li><li>行内元素只能容纳文本或其他行内元素</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs html">span<br>a<br>strong<br>b<br>em<br>i<br>del...<br></code></pre></td></tr></table></figure><h6 id="行内块元素"><a href="#行内块元素" class="headerlink" title="行内块元素"></a>行内块元素</h6><ul><li>同时有块元素和行内元素的特点</li><li>和相邻行内元素(行内块)在一行上, 但是它们之间会有空白间隙,一行可以显示多个(行内元素特点)</li><li>默认宽度就是它本身内容的宽度(行内元素)</li><li>高度  行高  外边距  及 内边距 都可以控制</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html">img<br>input<br>td<br></code></pre></td></tr></table></figure><h6 id="元素的显示模式的转换"><a href="#元素的显示模式的转换" class="headerlink" title="元素的显示模式的转换"></a>元素的显示模式的转换</h6><ul><li>比如增加 a 标签的触发范围<ul><li><code>display: block;</code>     将行内元素转换为块级元素</li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs html">a &#123;<br>width: 150px;<br>height: 150px;<br>background-color: red;<br>display: block;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li><code>display:inline;</code>  将块元素转换为行内元素</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs html">div &#123;<br>width: 150px;<br>height: 150px;<br>此时元素被设置为行内元素,设置的宽高属性无效<br>display: inline;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li><code>display:inline-block;</code>     将元素转换为    行内块元素    </li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html">span &#123;<br>width: 150px;<br>height: 150px;<br>display: inline-block;<br>&#125;<br></code></pre></td></tr></table></figure><h6 id="Tips-行内块元素之间会有间隙-有时会导致盒子被挤到下"><a href="#Tips-行内块元素之间会有间隙-有时会导致盒子被挤到下" class="headerlink" title="Tips: 行内块元素之间会有间隙 有时会导致盒子被挤到下"></a>Tips: 行内块元素之间会有间隙 有时会导致盒子被挤到下</h6><h6 id="让文本水平垂直居中的方法"><a href="#让文本水平垂直居中的方法" class="headerlink" title="让文本水平垂直居中的方法"></a>让文本水平垂直居中的方法</h6><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs scss"><span class="hljs-attribute">text-align</span>: center;实现文本水平居中<br><span class="hljs-attribute">line-height</span>: height;将<span class="hljs-attribute">line-height</span>(行高)设置和元素<span class="hljs-attribute">height</span>(高度一样大小 可实现垂直居中)<br></code></pre></td></tr></table></figure><h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><h6 id="引入背景图"><a href="#引入背景图" class="headerlink" title="引入背景图"></a>引入背景图</h6><p><code>background: url();</code></p><h6 id="背景平铺"><a href="#背景平铺" class="headerlink" title="背景平铺"></a>背景平铺</h6><ul><li>背景可添加颜色, 但是图片会盖住颜色</li></ul><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs gams"><span class="hljs-keyword">repeat</span>沿X Y 轴平铺<br><span class="hljs-keyword">no</span>-<span class="hljs-keyword">repeat</span> 不平铺<br><span class="hljs-keyword">repeat</span>-x 沿 X 轴平铺<br><span class="hljs-keyword">repeat</span>-y 沿 Y 轴平铺<br><br>background-<span class="hljs-keyword">repeat</span>: <span class="hljs-keyword">no</span>-<span class="hljs-keyword">repeat</span>;<br></code></pre></td></tr></table></figure><h6 id="背景图片的位置"><a href="#背景图片的位置" class="headerlink" title="背景图片的位置"></a>背景图片的位置</h6><p><code>background-position:x y;</code></p><ul><li>如果后面二个是方位名词(top    left    right    bottom    center)    二个值顺序无关紧要</li><li>如果省略第二个参数 则默认居中  <code>background-position: top;</code></li><li>如果参数是精确坐标,则是 x y 轴坐标  <code>background-position: 20px 20px;</code></li><li>后面参数可以使混合值  <code>background-position: 20px center;</code></li></ul><h6 id="背景图片固定"><a href="#背景图片固定" class="headerlink" title="背景图片固定"></a>背景图片固定</h6><p><code>background-attachment: fixed(固定) | scrol(滚动);</code></p><h6 id="背景复合写法"><a href="#背景复合写法" class="headerlink" title="背景复合写法"></a>背景复合写法</h6><p><code>background: 颜色 地址 平铺 图像滚动 位置;</code></p><h6 id="背景半透明"><a href="#背景半透明" class="headerlink" title="背景半透明"></a>背景半透明</h6><p><code>background: rgba(0,0,0,.3);</code></p><h5 id="tips-当图片宽度和父元素宽度一样大时-就不会溢出盒子范围了"><a href="#tips-当图片宽度和父元素宽度一样大时-就不会溢出盒子范围了" class="headerlink" title="tips: 当图片宽度和父元素宽度一样大时,就不会溢出盒子范围了"></a>tips: 当图片宽度和父元素宽度一样大时,就不会溢出盒子范围了</h5><h6 id="CSS特性"><a href="#CSS特性" class="headerlink" title="CSS特性"></a>CSS特性</h6><ul><li>样式冲突,就近原则</li><li>继承性    子元素会继承父元素的样式(text-  font-  line-  这些元素开头的可以继承,以及 color 属性)</li><li>优先级    !important &gt; 行内样式 style=”” &gt; ID选择器 &gt; 类选择\伪类选择器 &gt; 元素选择器 &gt; 继承或 *</li></ul><h3 id="盒子模型"><a href="#盒子模型" class="headerlink" title="盒子模型"></a>盒子模型</h3><h6 id="盒子模型组成"><a href="#盒子模型组成" class="headerlink" title="盒子模型组成"></a>盒子模型组成</h6><ul><li>内边距(padding)  外边距(margin)  边框(border) 内容</li></ul><h6 id="边框"><a href="#边框" class="headerlink" title="边框"></a>边框</h6><ul><li>border-width     边框线粗细</li><li>border-style    边框线样式  solid  实线  |  dashed  虚线 |  dotted  点线</li><li>border-color  边框颜色</li><li>边框会影响盒子的实际大小</li></ul><h6 id="边框的复合写法"><a href="#边框的复合写法" class="headerlink" title="边框的复合写法"></a>边框的复合写法</h6><ul><li><code>border: 1px solid red;</code>   无顺序要求</li><li><code>border-top: 1px dashed red;</code>  设置上边框</li></ul><h5 id="内边距"><a href="#内边距" class="headerlink" title="内边距"></a>内边距</h5><ul><li><code>padding-top | right | botom | left</code></li></ul><h6 id="边距复合写法"><a href="#边距复合写法" class="headerlink" title="边距复合写法"></a>边距复合写法</h6><p><code>padding: 5px</code> 上下左右都是5px</p><p><code>padding: 5px 10px</code>  上下是5px  左右是10px</p><p><code>padding: 5px 10px 15px</code> 上5px  左右10px  下15px</p><h6 id="padding会影响盒子实际大小"><a href="#padding会影响盒子实际大小" class="headerlink" title="padding会影响盒子实际大小"></a>padding会影响盒子实际大小</h6><ul><li>内容和边框有了距离,添加了内边距</li><li>就是说盒子有了宽 高,此时在指定内边距,会撑大盒子</li><li>如果想保证盒子跟效果图大小保持一致,则让width/height减去多出来的内边距大小即可</li><li>如果盒子本身没有指定width/height属性,则此时padding不会撑开盒子大小</li></ul><h5 id="外边距"><a href="#外边距" class="headerlink" title="外边距"></a>外边距</h5><ul><li><code>margin-top | right | bottom | left</code></li></ul><h6 id="设置块级元素水平居中"><a href="#设置块级元素水平居中" class="headerlink" title="设置块级元素水平居中"></a>设置块级元素水平居中</h6><ul><li>条件:<ol><li>盒子必须指定了宽度</li><li>盒子的左右外边距设置为 <code>auto</code></li></ol></li></ul><h6 id="行内元素-行内块元素水平居中"><a href="#行内元素-行内块元素水平居中" class="headerlink" title="行内元素\行内块元素水平居中"></a>行内元素\行内块元素水平居中</h6><ul><li>给父元素添加 <code>text-align: center;</code></li></ul><h6 id="嵌套块元素垂直外边距的塌陷"><a href="#嵌套块元素垂直外边距的塌陷" class="headerlink" title="嵌套块元素垂直外边距的塌陷"></a>嵌套块元素垂直外边距的塌陷</h6><ul><li>解决办法:<ol><li>为父元素定义边框</li><li>为父元素定义内边距</li><li>为父元素添加 <code>overflow: hidden;</code></li></ol></li></ul><h6 id="清除内外边距"><a href="#清除内外边距" class="headerlink" title="清除内外边距"></a>清除内外边距</h6><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs css">* &#123;<br><span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;<br><span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h6 id="Tips-浮动的盒子不会有外边距合并问题-不会嵌套塌陷"><a href="#Tips-浮动的盒子不会有外边距合并问题-不会嵌套塌陷" class="headerlink" title="Tips: 浮动的盒子不会有外边距合并问题(不会嵌套塌陷)"></a>Tips: 浮动的盒子不会有外边距合并问题(不会嵌套塌陷)</h6><h6 id="圆角边框"><a href="#圆角边框" class="headerlink" title="圆角边框"></a>圆角边框</h6><p><code>border-radius:;</code>当值为四个时分别代表 上左 上右 下右 下左</p><ul><li>​    一个圆形 一个正方形盒子 圆角值设为宽或高的一半</li><li>矩形半圆  圆角值设为高度的一半</li></ul><h6 id="盒子阴影"><a href="#盒子阴影" class="headerlink" title="盒子阴影"></a>盒子阴影</h6><p><code>box-shadow</code></p><p><img src="/2021/06/06/CSS%E7%AC%94%E8%AE%B0/Typora/%E5%9B%BE%E7%89%87/IMG_3858.PNG" alt="IMG_3858"></p><h6 id="文字阴影"><a href="#文字阴影" class="headerlink" title="文字阴影"></a>文字阴影</h6><p><code>text-shadow</code></p><h3 id="浮动"><a href="#浮动" class="headerlink" title="浮动"></a>浮动</h3><h6 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h6><ol><li>浮动元素会脱离标准流(脱标)<ul><li>浮动的元素会脱离标准流,原来位置将会被别的元素占用</li></ul></li><li>浮动元素会一行显示并且元素顶部对齐<ul><li>父元素装不下这些盒子时,多出的盒子会另起一行对齐</li></ul></li><li>浮动元素会具有行内块元素的特性</li></ol><ul><li><h6 id="浮动元素经常和标准流父级搭配使用"><a href="#浮动元素经常和标准流父级搭配使用" class="headerlink" title="浮动元素经常和标准流父级搭配使用"></a>浮动元素经常和标准流父级搭配使用</h6><ul><li>先用标准流的父元素1排列上下位置,之后内部子元素采取浮动排列左右位置</li></ul><h6 id="注意点"><a href="#注意点" class="headerlink" title="注意点"></a>注意点</h6><ol><li>浮动和标准流的父盒子搭配<ul><li>先用标准流的父元素排列上下位置,之后内部子元素采取浮动排列左右位置</li></ul></li><li>一个盒子浮动了,理论上其余的兄弟元素也要浮动<ul><li>浮动的盒子只会影响浮动盒子后面的标准流不会影响前面的标准流 </li></ul></li></ol><h6 id="清除浮动"><a href="#清除浮动" class="headerlink" title="清除浮动"></a>清除浮动</h6><p><code>clear: both;</code></p><ol><li><h6 id="额外标签法"><a href="#额外标签法" class="headerlink" title="额外标签法"></a>额外标签法</h6><ol><li><p>找到在最后一个浮动的盒子,在后面添加一个空盒子(块级元素),添加clear: both;</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><br>  .test &#123;<br><span class="css">    <span class="hljs-attribute">clear</span>: both;</span><br>  &#125;<br><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;top&quot;</span>&gt;</span>top<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;banner&quot;</span>&gt;</span>banner<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;test&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure></li></ol></li><li><h6 id="父级元素添加-overflow"><a href="#父级元素添加-overflow" class="headerlink" title="父级元素添加  overflow"></a>父级元素添加  overflow</h6></li><li><h6 id="after-伪元素法-在父元素添加"><a href="#after-伪元素法-在父元素添加" class="headerlink" title=":after 伪元素法 在父元素添加"></a>:after 伪元素法 在父元素添加</h6></li></ol></li></ul><p><img src="/2021/06/06/CSS%E7%AC%94%E8%AE%B0/Typora/%E5%9B%BE%E7%89%87/IMG_3861.PNG" alt="IMG_3861"></p><p><code>&lt;div class=&quot;box clearfix&quot;&gt;&lt;/div&gt;</code></p><ul><li><h6 id="为什么清除浮动"><a href="#为什么清除浮动" class="headerlink" title="为什么清除浮动"></a>为什么清除浮动</h6><ol><li>父级没有高度</li><li>子盒子浮动了</li><li>影响下面布局,就该清除浮动</li></ol></li></ul><h3 id="CSS属性书写顺序"><a href="#CSS属性书写顺序" class="headerlink" title="CSS属性书写顺序"></a>CSS属性书写顺序</h3><p><img src="/2021/06/06/CSS%E7%AC%94%E8%AE%B0/Typora/%E5%9B%BE%E7%89%87/IMG_3873.PNG" alt="IMG_3873"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs html">.test &#123;<br>// 第一部分写布局相关的属性<br>display: block;<br>position: relative;<br>float: left;<br><br>//第二部分写自身属性<br>width: 100px;<br>height: 100px;<br>margin: 0 auto;<br>padding: 20px 0;<br><br>//第三部分写文本属性<br>font-family: ****;<br>color: red;<br><br>//第四部分写其他属性<br>background: rgba(0,0,0,0.3)<br>border-radius: 10px;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="学成在线"><a href="#学成在线" class="headerlink" title="学成在线"></a>学成在线</h3><ul><li>导航栏<ul><li>不是直接用a标签生成,而是用li包含a</li></ul></li></ul><p>当盒子内容不固定时就不要指定宽度,让内容把盒子撑开,这样可以满足不同宽度</p><h3 id="定位"><a href="#定位" class="headerlink" title="定位"></a>定位</h3><h6 id="为什么需要定位"><a href="#为什么需要定位" class="headerlink" title="为什么需要定位"></a>为什么需要定位</h6><ul><li>​    浮动可以让多个块级盒子一行没有缝隙排列显示,经常用于横向排列盒子</li><li>​    定位则是可以让盒子自由在某个盒子内移动位置或者固定屏幕中某个位置,并且可以压住其他盒子</li><li>定位 = 定位模式 + 边偏移</li></ul><h6 id="定位模式"><a href="#定位模式" class="headerlink" title="定位模式"></a>定位模式</h6><ul><li>通过 <code>position</code>属性来设置</li></ul><ol><li><code>static</code>静态定位</li><li><code>relative </code>相对定位</li><li><code>absolute</code> 绝对定位</li><li><code>fixed</code> 固定定位</li></ol><h6 id="边偏移"><a href="#边偏移" class="headerlink" title="边偏移"></a>边偏移</h6><ul><li><p>边偏移就是定位的盒子移动到最终位置</p></li><li><p>定位的盒子是通过以下四个属性移动位置的</p><ol><li><code>top</code>        相对于父元素上边线的距离,以下同理</li><li><code>buttom</code></li><li><code>left</code></li><li><code>right</code></li></ol></li></ul><h6 id="静态定位-stastic"><a href="#静态定位-stastic" class="headerlink" title="静态定位  stastic"></a>静态定位  stastic</h6><ul><li>​    默认的定位方式,无定位的意思</li><li>标准流特性摆放位置,它没有边偏移</li><li>静态定位在布局中很少用到</li></ul><h6 id="相对定位-relative"><a href="#相对定位-relative" class="headerlink" title="相对定位  relative"></a>相对定位  relative</h6><ul><li><p>元素在移动位置的时候,是相对与它原来的位置作参考系</p><p><code>position: relative;</code></p></li><li><p>原来在标准流的位置继续占有,后面的盒子不会占用他的位置(不脱标,继续保留原来位置)</p></li></ul><h6 id="绝对定位-absolute"><a href="#绝对定位-absolute" class="headerlink" title="绝对定位  absolute"></a>绝对定位  absolute</h6><ul><li><p>元素在移动位置时是以父元素作参考系</p><p><code>position: absolute;</code></p></li><li><p>如果没有父元素或者父元素没有定位,则以浏览器为准定位 </p></li><li><p>如果父元素有定位(相对 绝对 固定), 则是以最近一级的有定位父元素为参考点移动位置</p></li><li><p>绝对定位不在占有原先位置(脱标)</p></li></ul><h6 id="子绝父相"><a href="#子绝父相" class="headerlink" title="子绝父相"></a>子绝父相</h6><p><img src="/2021/06/06/CSS%E7%AC%94%E8%AE%B0/Typora/%E5%9B%BE%E7%89%87/IMG_3879.PNG" alt="IMG_3879"></p><h6 id="固定定位-fixed"><a href="#固定定位-fixed" class="headerlink" title="固定定位  fixed"></a>固定定位  fixed</h6><ul><li><p>元素固定于浏览器位置,不会随页面滚动而改变位置,以浏览器可视窗口做参考系(不是唯一参考系)</p><p><code>position: fixed;</code></p></li><li><p>固定在某个区域,不随滚动条滚动而滚动</p></li><li><p>跟父元素没有关系</p></li><li><p>不再占有原先位置(脱标)</p></li></ul><h6 id="固定在版心右侧位置"><a href="#固定在版心右侧位置" class="headerlink" title="固定在版心右侧位置"></a>固定在版心右侧位置</h6><ol><li>​    让固定定位的盒子 left:50% ,走到浏览器一半位置(板鞋位置)</li><li>让margin-left: 版心宽度的一半距离</li></ol><h6 id="黏性定位-sticky"><a href="#黏性定位-sticky" class="headerlink" title="黏性定位  sticky"></a>黏性定位  sticky</h6><ul><li>以浏览器的可视窗口为参照点移动元素</li><li>占有原先的位置 (不脱标)</li><li>必须添加 top left right  bottom</li></ul><h6 id="定位的总结"><a href="#定位的总结" class="headerlink" title="定位的总结"></a>定位的总结</h6><p><img src="/2021/06/06/CSS%E7%AC%94%E8%AE%B0/Typora/%E5%9B%BE%E7%89%87/IMG_3882.PNG" alt="IMG_3882"></p><ul><li></li></ul><h6 id="定位叠放次序-z-idnex"><a href="#定位叠放次序-z-idnex" class="headerlink" title="定位叠放次序  z-idnex"></a>定位叠放次序  z-idnex</h6><ul><li>数字越大,盒子越靠上,值可为负数</li><li>如果属性值相同,则按照书写顺序,后来居上</li><li>数字后面不加单位</li><li>只有定位的盒子才有 z-index 属性</li></ul><h6 id="绝对定位盒子水平垂直居中"><a href="#绝对定位盒子水平垂直居中" class="headerlink" title="绝对定位盒子水平垂直居中"></a>绝对定位盒子水平垂直居中</h6><p>​    </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs html">.box &#123;<br>      position: absolute;<br>      /* 水平居中 */<br>      left: 50%;<br>      margin-left: -100px;<br>      /* 垂直居中 */<br>      top: 50%;<br>      margin-top: -100px;<br>      <br>      width: 200px;<br>      height: 200px;<br>      background-color: blueviolet;<br>    &#125;<br></code></pre></td></tr></table></figure><h6 id="定位拓展"><a href="#定位拓展" class="headerlink" title="定位拓展"></a>定位拓展</h6><ul><li><h6 id="Tips-绝对定位和固定定位也和浮动类似"><a href="#Tips-绝对定位和固定定位也和浮动类似" class="headerlink" title="Tips: 绝对定位和固定定位也和浮动类似"></a>Tips: 绝对定位和固定定位也和浮动类似</h6><ul><li>​    行内元素添加绝对或固定定位,可以直接设置宽度和高度</li><li>块级元素添加绝对或固定定位,如果不给宽度或高度,默认大小是内容大小</li></ul></li><li><h6 id="绝对定位-固定定位-会完全压住盒子"><a href="#绝对定位-固定定位-会完全压住盒子" class="headerlink" title="绝对定位(固定定位) 会完全压住盒子"></a>绝对定位(固定定位) 会完全压住盒子</h6><ul><li>浮动元素不同,只会压住他下面标准流的盒子,但是不会压住标准流盒子里面的文字(图片)</li></ul></li><li><p>相对定位可以用 <code>margin:0 auto;</code> 设置居中,而绝对和固定定位则不可以</p></li></ul><h6 id="网页布局总结"><a href="#网页布局总结" class="headerlink" title="网页布局总结"></a>网页布局总结</h6><p><img src="/2021/06/06/CSS%E7%AC%94%E8%AE%B0/Typora/%E5%9B%BE%E7%89%87/IMG_3902.PNG" alt="IMG_3902"></p><ul><li>当有图层覆盖是就需要用到定位来实现</li></ul><h3 id="元素的显示与隐藏"><a href="#元素的显示与隐藏" class="headerlink" title="元素的显示与隐藏"></a>元素的显示与隐藏</h3><ol><li><p><code>display:none | block</code>   显示     |    隐藏</p><ul><li>隐藏元素后,不在占有原来位置</li></ul></li><li><p><code>overflow: ;</code></p><ul><li><code>visible</code>   显示溢出的内容</li><li><code>hidden</code>    隐藏溢出的内容<ul><li>有定位的盒子,慎用 <code>overflow: hidden;</code> 因为他会隐藏多余部分</li></ul></li><li><code>scroll</code>    总是显示滚动条</li><li><code>auto</code>        在溢出时添加滚动条</li></ul></li><li><p><code>visibility: visible  |  hidden;</code>  显示   |   隐藏</p><ul><li>隐藏后继续保留位置</li></ul></li></ol><h3 id="精灵图使用"><a href="#精灵图使用" class="headerlink" title="精灵图使用"></a>精灵图使用</h3><h6 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h6><ul><li>有效的减少服务器接收和发送请求的次数,提高页面的加载速度</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs html">span &#123;<br>     display: inline-block;<br>     width: 110px;<br>     height: 118px;<br>     background: url(../img/abcd.jpg) no-repeat;<br>   &#125;<br>   .y &#123;<br>     <br>     background-position: -365px -550px;<br>   &#125;<br>   .q &#123;<br>     background-position: 0 -411px;<br>   &#125;<br>   .l &#123;<br>     background-position:  0 -271px;<br>   &#125;<br></code></pre></td></tr></table></figure><h3 id="鼠标样式"><a href="#鼠标样式" class="headerlink" title="鼠标样式"></a>鼠标样式</h3><p>​    <code>cursor: pointer; </code></p><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs smali">default   默认指针<br>pointer  指针<br>move  移动十字架<br>text文本<br>not-allowed  无法选择状态<br></code></pre></td></tr></table></figure><h3 id="用户界面样式"><a href="#用户界面样式" class="headerlink" title="用户界面样式"></a>用户界面样式</h3><h6 id="表单轮廓和防止拖拽文本域"><a href="#表单轮廓和防止拖拽文本域" class="headerlink" title="表单轮廓和防止拖拽文本域"></a>表单轮廓和防止拖拽文本域</h6><ol><li> <code>outline: none;  取消表单轮廓</code></li><li> <code>resize: none ; 取消拖拽文本域</code>   </li></ol><h6 id="CSS三角"><a href="#CSS三角" class="headerlink" title="CSS三角"></a>CSS三角</h6><ul><li><p>​    将元素宽高都设置为  0  , 仅让边框属性来撑满盒子,四个边框按对角线将其划分为四块,每块就是一个三角形</p></li><li><p><img src="/2021/06/06/CSS%E7%AC%94%E8%AE%B0/Typora/%E5%9B%BE%E7%89%87/Snipaste_2021-05-19_17-50-35.png" alt="Snipaste_2021-05-19_17-50-35"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs html"> .test &#123;<br>   width: 0;<br>   height: 0;<br>  <br>//兼容性<br>line-height: 0;<br>font-size: 0;<br>  <br>border: 100px solid transparent;<br>   //border-top-color: rebeccapurple;<br>   //border-righ-colort:  saddlebrown;<br>   //border-bottom-color: aqua;<br>   border-left-color: fuchsia;<br> &#125;<br></code></pre></td></tr></table></figure></li></ul><ul><li><h6 id="小三角案例制作"><a href="#小三角案例制作" class="headerlink" title="小三角案例制作"></a>小三角案例制作</h6><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs html">  <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><br>    .box &#123;<br><span class="css">      <span class="hljs-attribute">position</span>: relative;</span><br><span class="css">      <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;</span><br><span class="css">      <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;</span><br><span class="css">      <span class="hljs-attribute">background-color</span>: black;</span><br><span class="css">      <span class="hljs-attribute">margin</span>: <span class="hljs-number">200px</span> auto;</span><br>    &#125;<br><span class="css">    <span class="hljs-selector-class">.box</span> <span class="hljs-selector-tag">span</span> &#123;</span><br><span class="css">      <span class="hljs-attribute">position</span>: absolute;</span><br><span class="css">      <span class="hljs-attribute">width</span>: <span class="hljs-number">0</span>;</span><br><span class="css">      <span class="hljs-attribute">height</span>: <span class="hljs-number">0</span>;</span><br><span class="css">      <span class="hljs-attribute">top</span>: -<span class="hljs-number">20px</span>;</span><br><span class="css">      <span class="hljs-attribute">right</span>: <span class="hljs-number">15px</span>;</span><br><span class="css">      <span class="hljs-attribute">border</span>: <span class="hljs-number">10px</span> solid transparent;</span><br><span class="css">      <span class="hljs-attribute">border-bottom-color</span>: black;</span><br>    &#125;<br>  <span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;box&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br></code></pre></td></tr></table></figure></li></ul><p><img src="/2021/06/06/CSS%E7%AC%94%E8%AE%B0/Typora/%E5%9B%BE%E7%89%87/image-20210519180542247.png" alt="image-20210519180542247"></p><h3 id="vertical-align属性应用"><a href="#vertical-align属性应用" class="headerlink" title="vertical-align属性应用"></a>vertical-align属性应用</h3><ul><li>​    经常用于设置图片或者表单(行内块元素)和文字垂直对齐      属性在这些元素上,不是用在文字上</li><li><img src="/2021/06/06/CSS%E7%AC%94%E8%AE%B0/Typora/%E5%9B%BE%E7%89%87/IMG_3929.PNG" alt="IMG_3929" style="zoom:33%;"><img src="/2021/06/06/CSS%E7%AC%94%E8%AE%B0/Typora/%E5%9B%BE%E7%89%87/IMG_3930.PNG" alt="IMG_3930" style="zoom:25%;"></li></ul><h6 id="图片底部空白"><a href="#图片底部空白" class="headerlink" title="图片底部空白"></a>图片底部空白</h6><ol><li>图片默认和文字基线对齐,你只要给图片添加  <code>vertiacl-align: middle | top | bottom ;</code> 等</li><li>吧图片转换为块级元素</li></ol><h3 id="溢出文字省略号显示"><a href="#溢出文字省略号显示" class="headerlink" title="溢出文字省略号显示"></a>溢出文字省略号显示</h3><h6 id="单行文字"><a href="#单行文字" class="headerlink" title="单行文字"></a>单行文字</h6><ul><li>需满足以下需求</li></ul><ol><li>   <code>white-space:nowrap;  先强制一行内显示文本</code></li><li>   ​    <code>overflow: hidden;    超出部分隐藏</code></li><li>   ​    <code>text-overflow: ellipsis;  文字用省略号替代超出的部分</code></li></ol><h6 id="多行文字"><a href="#多行文字" class="headerlink" title="多行文字"></a>多行文字</h6><p><img src="/2021/06/06/CSS%E7%AC%94%E8%AE%B0/Typora/%E5%9B%BE%E7%89%87/IMG_3931.PNG" alt="IMG_3931"></p><h6 id="常见布局技巧"><a href="#常见布局技巧" class="headerlink" title="常见布局技巧"></a>常见布局技巧</h6><p>​    浮动元素不会压住文字</p><p><img src="/2021/06/06/CSS%E7%AC%94%E8%AE%B0/Typora/%E5%9B%BE%E7%89%87/image-20210519222701728.png" alt="image-20210519222701728"></p><p><img src="/2021/06/06/CSS%E7%AC%94%E8%AE%B0/Typora/%E5%9B%BE%E7%89%87/image-20210519223751962.png" alt="image-20210519223751962"></p><h3 id="CSS初始化"><a href="#CSS初始化" class="headerlink" title="CSS初始化"></a>CSS初始化</h3><h3 id="HTML5新特性"><a href="#HTML5新特性" class="headerlink" title="HTML5新特性"></a>HTML5新特性</h3><h6 id="新增语义化标签"><a href="#新增语义化标签" class="headerlink" title="新增语义化标签"></a>新增语义化标签</h6><ol><li><code>header  头部标签</code></li><li><code>nav     导航标签</code></li><li><code>article  内容标签</code></li><li><code>section  定义文档某个区域</code></li><li><code>aside   侧边栏标签</code></li><li><code>footer   尾部标签</code></li></ol><h3 id="CSS新特性"><a href="#CSS新特性" class="headerlink" title="CSS新特性"></a>CSS新特性</h3><h6 id="属性选择器"><a href="#属性选择器" class="headerlink" title="属性选择器"></a>属性选择器</h6><ul><li><p><code>input[value]</code>  选中第一个输入框</p><ul><li><div class="code-wrapper"><pre><code class="hljs">&lt;input type=&quot;text&quot; value=&quot;输入姓名&quot;&gt;&lt;input type=&quot;text&quot;&gt;<figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></div></td><td class="code"><pre><code class="hljs clean"><br>- `input[type=text]`  只选择 type=text 文本框的input选取出来<br><br>- `div[<span class="hljs-keyword">class</span>^=icon]`  首先选择是div  然后具有<span class="hljs-keyword">class</span>属性   并且属性值必须是 icon开头的元素<br><br>- <br><br><br><br><br><br>###### 盒子模型<br><br><span class="hljs-number">1.</span> box-sizing: content-box 盒子大小为 width + padding + border (默认)<br><span class="hljs-number">2.</span> box-sizing; border-box 盒子大小为width 不会因为其他属性而撑大盒子大小<br><br><br><br><br><br>###### 伪元素选择器<br><br><span class="hljs-number">1.</span> `element::after &#123;&#125;`<br><span class="hljs-number">2.</span> `element::before &#123;&#125;`<br><br><br><br><br><br>###### 过渡  (transition)<br><br>- transition: 要过渡的属性  花费时间  运动曲线  何时开始<br>  - transition: width <span class="hljs-number">1</span>s ease <span class="hljs-number">0</span>s;  后面二个值不写默认为这个值<br>- 写多个属性时<br>  - transition: width <span class="hljs-number">1</span>s ease <span class="hljs-number">0</span>s, height <span class="hljs-number">1</span>s ease <span class="hljs-number">0</span>s;  属性间用逗号隔开<br><br><br><br><br><br>### <span class="hljs-number">2</span>D转换<br><br>###### 位移<br><br>`transform:translate(x,y);`<br><br>`transform:translateX()`只在x轴上位移<br><br>`transform: translateY();`  只在y轴上位移<br><br>- 如果值是百分比,是相当于自身宽高<br><br>###### 旋转<br><br>`transform: rotate(度数);`     单位是deg<br><br>###### 缩放<br><br>`transform: scale(<span class="hljs-number">2</span>,<span class="hljs-number">2</span>);`  <br><br>-  后面一个参数不写默认和前面一个值相同<br>-  最大的好出就是缩小 放大不会影响其他盒子或内容   而用宽高修改会影响其他盒子<br><br>###### 改变转换中心点<br><br>`transform-origin: x y | top right bottom left center;` <br><br>- 用空格隔开  <br><br>- 默认是中心位置(<span class="hljs-number">50</span>%,<span class="hljs-number">50</span>%)<br><br>  <br><br><br><br>###### <span class="hljs-number">2</span>D转换复合型写法<br><br>- 同时使用多个转换,其格式为   `transform: transform() rotate() scale();`<br>- 其顺序会影响转换的效果( 先旋转会改变坐标轴方向)<br>- 当我们同时有位移和其他属性的时候,记得要将位移放在最前面<br><br><br><br><br><br><br><br>### 动画<br><br>###### 步骤<br><br>- ###### 先定义动画<br><br>  - 用keyframes定义动画 写在样式中<br><br>  - <span class="hljs-keyword">from</span> to 等价于<span class="hljs-number">0</span>% <span class="hljs-number">100</span>%<br><br></code></pre></td></tr></table></figure>@keyframes 动画名称 &#123;    0%/from &#123;        width:100px;    &#125;    100%/to &#123;        width: 200px;    &#125;&#125;</code></pre><p><img src="/2021/06/06/CSS%E7%AC%94%E8%AE%B0/Typora/%E5%9B%BE%E7%89%87/image-20210526164532501.png"></p></li></ul></li></ul><ul><li><h6 id="再使用-调用-动画"><a href="#再使用-调用-动画" class="headerlink" title="再使用(调用)动画"></a>再使用(调用)动画</h6><ol><li><p>在需要使用动画的盒子中调用</p><p><code>animation-name: 动画名称;</code>    </p></li><li><p>持续时间</p><p><code>animation-duration: 2s; </code></p></li></ol></li><li><h6 id="动画简写属性"><a href="#动画简写属性" class="headerlink" title="动画简写属性"></a>动画简写属性</h6><p><code>transform: 动画名称 持续时间 运动曲线 何时开始 播放次数 是否反方向 动画起始或者结束状态;</code></p></li><li><p>前面二个属性必须写,后面的可以省略</p></li></ul><h6 id="其他属性"><a href="#其他属性" class="headerlink" title="其他属性"></a>其他属性</h6><p>​    <code>animation-timing-function: ease;</code>    运动曲线</p><p>​    <code>animation-delay: 1s;</code>    延时开始</p><p>​    <code>animation-iteration-count: 1 | infinite;</code>   一次循环和无限循环</p><p>​    <code>animation-direction: normal | alternate;</code>        逆向播放</p>]]></content>
    
    
    
    <tags>
      
      <tag>CSS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>联想15isk加装固态</title>
    <link href="/2021/06/06/%E8%81%94%E6%83%B315isk%E5%8A%A0%E8%A3%85%E5%9B%BA%E6%80%81/"/>
    <url>/2021/06/06/%E8%81%94%E6%83%B315isk%E5%8A%A0%E8%A3%85%E5%9B%BA%E6%80%81/</url>
    
    <content type="html"><![CDATA[<h3 id="加装前须知"><a href="#加装前须知" class="headerlink" title="加装前须知"></a>加装前须知</h3><ol><li><p>首先查看你的笔记本电脑是否留有加装固态的接口(现在一般都有)</p><p><img src="/2021/06/06/%E8%81%94%E6%83%B315isk%E5%8A%A0%E8%A3%85%E5%9B%BA%E6%80%81/%E5%9B%BA%E6%80%81.jpg" alt="固态"></p></li><li><p>安装固态要将电源切断,需要关机</p></li><li><p>查看你电脑固态接口支持什么协议</p><ul><li>分为m.2 pcie 3.0x4</li><li>分为m.2 pcie 3.0x2</li><li>如果你的电脑只支持pcie 3.0x2 但你的固态是pcie 3.0x4, 那么你在电脑安装该固态只能跑半速</li></ul></li><li><p>考虑到笔记本散热相对较差,不能只去挑选性能出色的固态,那样固态发热严重的话就会掉速</p><ul><li>西数SN550和三星970Evo都是不错的选择(970Evo是我个人安装的</li></ul><h3 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h3><p>你需要安装以下软件</p><ul><li>分区助手–用来系统分盘和系统迁移<ul><li><a href="https://www.disktool.cn/">傲梅分区助手:免费硬盘分区,克隆工具,分区魔术师替代者 (disktool.cn)</a></li></ul></li><li>crystaldisk info–检测固态信息<ul><li><a href="http://crystalmark.info/en/software/crystaldiskinfo/">CrystalDiskInfo – Crystal Dew World (crystalmark.info)</a></li></ul></li><li>crystalmark–检测你固态性能<ul><li><a href="http://crystalmark.info/en/software/crystaldiskmark/">CrystalDiskMark – Crystal Dew World (crystalmark.info)</a></li></ul></li><li>你所安装固态品牌的驱动,根据你固态的品牌上网搜索下载</li></ul><h3 id="安装SSD"><a href="#安装SSD" class="headerlink" title="安装SSD"></a>安装SSD</h3><ol><li><p>打开笔记本后盖,找到预留接口位置</p><ul><li><img src="/2021/06/06/%E8%81%94%E6%83%B315isk%E5%8A%A0%E8%A3%85%E5%9B%BA%E6%80%81/%E5%9B%BA%E6%80%81.jpg"></li></ul></li><li><p>将固态缺口和接口缺口位置对准插入</p><p><img src="/2021/06/06/%E8%81%94%E6%83%B315isk%E5%8A%A0%E8%A3%85%E5%9B%BA%E6%80%81/1.jpg"></p><p><img src="/2021/06/06/%E8%81%94%E6%83%B315isk%E5%8A%A0%E8%A3%85%E5%9B%BA%E6%80%81/2.jpg"></p></li><li><p>将安装好的固态用螺丝固定好后,把后壳安上,开机</p><p><img src="/2021/06/06/%E8%81%94%E6%83%B315isk%E5%8A%A0%E8%A3%85%E5%9B%BA%E6%80%81/3.jpg"></p></li></ol></li></ol><h3 id="系统迁移"><a href="#系统迁移" class="headerlink" title="系统迁移"></a>系统迁移</h3><ol><li><p>电脑打开后首先查看你的固态是否被电脑识别,打开设备管理器-&gt;磁盘驱动器</p><ul><li>打开方法: 在开始菜单栏右键会出现下面窗口,然后点击设备管理器,如果在磁盘驱动器上看到你所安装的固态,说明识别成功</li></ul><p><img src="/2021/06/06/%E8%81%94%E6%83%B315isk%E5%8A%A0%E8%A3%85%E5%9B%BA%E6%80%81/4.png"></p><p><img src="/2021/06/06/%E8%81%94%E6%83%B315isk%E5%8A%A0%E8%A3%85%E5%9B%BA%E6%80%81/5.jpg"></p></li><li><p>打开分区助手,迁移系统<a href="https://www.disktool.cn/jiaocheng/migrate-system.html">官方教程</a></p><ol><li>SSD安装完成后，不要急于分区和给盘符，因为迁移系统时会要求删除分区；</li><li>按照教程，点击“提交”后，会提示大概需要的时间，电脑会重启然后进入一个DOS界面，就是黑底白字的，显示迁移进程，所以出现DOS界面时不要紧张。</li><li>迁移完成后，系统是可以进入了，但需要修改一下启动顺序，即进入BIOS改，把SSD设置为首选启动项。</li></ol></li><li><p>将固态设为启动盘</p><ul><li><p>开机或重启,等Lenovo的logo出现后按F2,进入BISO</p><p><img src="/2021/06/06/%E8%81%94%E6%83%B315isk%E5%8A%A0%E8%A3%85%E5%9B%BA%E6%80%81/6.jpg"></p></li><li><p>按方向键选择Boot页面，将EFI和Legacy都改成SSD为第一位，按F6可上移。</p><p><img src="/2021/06/06/%E8%81%94%E6%83%B315isk%E5%8A%A0%E8%A3%85%E5%9B%BA%E6%80%81/7.jpg"></p></li><li><p>最后方向键选到Exit，选择Exit saving changes，按回车，系统重启，至此修改完毕。</p><p><img src="/2021/06/06/%E8%81%94%E6%83%B315isk%E5%8A%A0%E8%A3%85%E5%9B%BA%E6%80%81/8.jpg"></p></li></ul></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>SSD</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>解决Echarts报错问题</title>
    <link href="/2021/06/05/%E8%A7%A3%E5%86%B3Echarts%E6%8A%A5%E9%94%99%E9%97%AE%E9%A2%98/"/>
    <url>/2021/06/05/%E8%A7%A3%E5%86%B3Echarts%E6%8A%A5%E9%94%99%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h6 id="浏览器发生报错"><a href="#浏览器发生报错" class="headerlink" title="浏览器发生报错"></a>浏览器发生报错</h6><ul><li><p><code>TypeError: Cannot read property &#39;init&#39; of undefined</code>        不能识别  <strong>init</strong>  或未定义</p></li><li><h6 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h6><ul><li><p>导入echarts是要加 * as 不然就会报该错误</p><p><img src="/2021/06/05/%E8%A7%A3%E5%86%B3Echarts%E6%8A%A5%E9%94%99%E9%97%AE%E9%A2%98/Echarts.png" alt="Echarts"></p></li></ul></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>Echarts</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>解决博客图片加载不出来的问题</title>
    <link href="/2021/04/21/%E8%A7%A3%E5%86%B3%E5%8D%9A%E5%AE%A2%E5%9B%BE%E7%89%87%E5%8A%A0%E8%BD%BD%E4%B8%8D%E5%87%BA%E6%9D%A5%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <url>/2021/04/21/%E8%A7%A3%E5%86%B3%E5%8D%9A%E5%AE%A2%E5%9B%BE%E7%89%87%E5%8A%A0%E8%BD%BD%E4%B8%8D%E5%87%BA%E6%9D%A5%E7%9A%84%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>让git保存用户名和密码</title>
    <link href="/2021/04/21/%E8%AE%A9git%E4%BF%9D%E5%AD%98%E7%94%A8%E6%88%B7%E5%90%8D%E5%92%8C%E5%AF%86%E7%A0%81/"/>
    <url>/2021/04/21/%E8%AE%A9git%E4%BF%9D%E5%AD%98%E7%94%A8%E6%88%B7%E5%90%8D%E5%92%8C%E5%AF%86%E7%A0%81/</url>
    
    <content type="html"><![CDATA[<h4 id="1找到-gitconfig-文件"><a href="#1找到-gitconfig-文件" class="headerlink" title="1找到 .gitconfig 文件"></a>1找到 .gitconfig 文件</h4><p><strong>.gitconfig</strong>  配置文件一般在 C&gt;user&gt;（你的用户名）文件夹下</p><p><img src="/2021/04/21/%E8%AE%A9git%E4%BF%9D%E5%AD%98%E7%94%A8%E6%88%B7%E5%90%8D%E5%92%8C%E5%AF%86%E7%A0%81/gitconfig.png" alt="gitconfig文件"></p><p>如果实在找不到这个文件，就使用这个软件  Everything  去搜索</p><p>附上链接</p><p><a href="https://pan.baidu.com/s/1Go44lMFKWETx8bs9vSqztg">百度云</a></p><p>提取码：6666</p><img src="/2021/04/21/%E8%AE%A9git%E4%BF%9D%E5%AD%98%E7%94%A8%E6%88%B7%E5%90%8D%E5%92%8C%E5%AF%86%E7%A0%81/everything.png" alt="everything" style="zoom: 50%;"><p>在此目录下打开 git Bash</p><p>运行：</p><figure class="highlight llvm"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs llvm">git config --<span class="hljs-keyword">global</span> credential.helper <span class="hljs-keyword">store</span><br></code></pre></td></tr></table></figure><p>.gitconfig 文件下就会多了下面的内容</p><p><img src="/2021/04/21/%E8%AE%A9git%E4%BF%9D%E5%AD%98%E7%94%A8%E6%88%B7%E5%90%8D%E5%92%8C%E5%AF%86%E7%A0%81/credential.png" alt="credential"></p><p>同时该目录下会生成一个 <strong>.git-credentials</strong>  文件，里面保存的有你的用户名和密码</p><p>当你再次向 <strong>github</strong> 提交时你只需要输入一次，后面在提交时就不在需要重新输入</p><p>tips: 后面提交依然会弹出 <strong>GitHub</strong> 用户登录UI窗口，直接点取消就可以了</p>]]></content>
    
    
    
    <tags>
      
      <tag>git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用HEXO搭建个人博客(windows)</title>
    <link href="/2021/04/20/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0/"/>
    <url>/2021/04/20/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0/</url>
    
    <content type="html"><![CDATA[<h4 id="1-所需工具"><a href="#1-所需工具" class="headerlink" title="1 所需工具"></a>1 所需工具</h4><h4 id="node-js"><a href="#node-js" class="headerlink" title="node.js"></a>node.js</h4><p>下载网址:</p><figure class="highlight awk"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//</span>nodejs.org<span class="hljs-regexp">/zh-cn/</span><br></code></pre></td></tr></table></figure><h4 id="git"><a href="#git" class="headerlink" title="git"></a>git</h4><p>下载网址：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//gi</span>t-scm.com/downloads<br></code></pre></td></tr></table></figure><p><strong>Typora</strong></p><p>用于编辑你的博文内容</p><p><strong>github账户</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//gi</span>thub.com/<br></code></pre></td></tr></table></figure><p>tips:  记住你的账号和密码</p><h4 id="校验是否安装成功"><a href="#校验是否安装成功" class="headerlink" title="校验是否安装成功"></a>校验是否安装成功</h4><p>以上二个工具下载完成后直接安装然后打开 <strong>cmd</strong> </p><p>分别运行<strong>node -v</strong> 和 <strong>npm-v</strong> 看是否出现版本，如果出现则证明<strong>node</strong>安装成功</p><p><img src="/2021/04/20/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0/node.png" alt="node"></p><h4 id="2安装cnpm淘宝镜像"><a href="#2安装cnpm淘宝镜像" class="headerlink" title="2安装cnpm淘宝镜像"></a>2安装cnpm淘宝镜像</h4><p>由于<strong>npm</strong>包管理器在国内下载速度很慢，所以我们可以安装一个淘宝镜像</p><p>运行 </p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">npm install -g cnpm --registry=https:<span class="hljs-regexp">//</span>registry.npm.taobao.org<br></code></pre></td></tr></table></figure><p>在 <strong>cmd</strong>下运行<strong>cnpm</strong>看是否出现相应指令</p><p><img src="/2021/04/20/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0/cnpm.png" alt="cnpm"></p><p>这样就可以用<strong>cnpm</strong>代替<strong>npm</strong>指令</p><h4 id="3-安装hexo框架"><a href="#3-安装hexo框架" class="headerlink" title="3 安装hexo框架"></a>3 安装hexo框架</h4><p>运行</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm">cnpm install -g hexo-<span class="hljs-keyword">cli</span><br></code></pre></td></tr></table></figure><p>进行全局安装，安装后用<strong>hexo-v</strong>版本号，出现则表示安装成功</p><h4 id="4-使用hexo-init初始化博客"><a href="#4-使用hexo-init初始化博客" class="headerlink" title="4 使用hexo init初始化博客"></a>4 使用hexo init初始化博客</h4><p>1、新建一个文件夹<strong>blog</strong>（名字随便取），等会所有博客的内容会全部在这个文件夹下面</p><p>2、进入这个文件夹，然后打开 <strong>git hash</strong>运行 <strong>hexo init</strong>命令开始初始化博客项目</p><p>3、运行 <strong>hexo s</strong> 启动预览你的博客，命令完成后会出现 <a href="http://localhost:4000/">http://localhost:4000</a> 端口，直接ctrl  +  鼠标左键在浏览器中打开，那么到目前为止，博客的初步搭建就完成了</p><p><img src="/2021/04/20/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0/%E5%8D%9A%E5%AE%A2%E9%A1%B5%E9%9D%A2.png" alt="博客页面"></p><h4 id="5-新建博文"><a href="#5-新建博文" class="headerlink" title="5 新建博文"></a>5 新建博文</h4><p>1、在 blog目录下打开 <strong>git hash</strong>运行 **hexo n “博文名称”**，那么在你的 source/_posts目录下就有你创建的博文了，你可以使用文本编译器去编辑你的博文，推荐大家使用 Typora</p><p>2、退回到blog目录下</p><p>运行</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo clean</span><br><span class="hljs-attribute">hexo g</span><br><span class="hljs-attribute">hexo s</span><br></code></pre></td></tr></table></figure><p>目前只是本地使用，所以你的博客只能在你的电脑访问，那么要想远程访问我们就必须部署到云端， 我们接下来要将博客部署到github上，所以你必须要创建一个github账户</p><h4 id="6-将博客部署到GitHub上"><a href="#6-将博客部署到GitHub上" class="headerlink" title="6 将博客部署到GitHub上"></a>6 将博客部署到GitHub上</h4><p>1、创建一个新的仓库</p><p><img src="/2021/04/20/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0/%E4%BB%93%E5%BA%93.png" alt="仓库"></p><p>注意：你的仓库名必须是 <strong>你的用户名.github.io</strong>，然后直接点击创建，仓库即创建完成</p><p><img src="/2021/04/20/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0/%E5%88%9B%E5%BB%BA%E4%BB%93%E5%BA%93.png" alt="创建仓库"></p><p>2、在 blog 目录下安装 <strong>git</strong> 部署插件</p><p>运行：</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">cnpm install <span class="hljs-comment">--save hexo-deployer-git</span><br></code></pre></td></tr></table></figure><p>3、配置  <strong>_config.yml</strong>  文件</p><p>打开 blog 目录下的 <strong>_config.yml</strong> 文件，在文件最底部配置</p><p><img src="/2021/04/20/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0/%E6%9B%B4%E6%94%B9%E5%8F%82%E6%95%B0.png" alt="更改参数"></p><p>注意： 每个冒号后面必须有一个空格</p><p>4、部署到 <strong>github</strong></p><p>在blog目录下运行</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo d</span><br></code></pre></td></tr></table></figure><p>部署是会弹出GitHub UI  界面，你需要输入你的用户名和密码，成功后去你的仓库刷新，会看到你部署的博客文件，在网址栏复制你的  <strong>用户名.github.io</strong> 你就可以实现远端访问了</p><p><a href="https://effort-1.github.io/2021/04/21/%E8%AE%A9git%E4%BF%9D%E5%AD%98%E7%94%A8%E6%88%B7%E5%90%8D%E5%92%8C%E5%AF%86%E7%A0%81/">git 如何保存用户名和密码</a></p>]]></content>
    
    
    <categories>
      
      <category>hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>HEXO 教程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2021/04/19/hello-world/"/>
    <url>/2021/04/19/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
  
  
  <entry>
    <title>关于</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[]]></content>
    
  </entry>
  
  
  
  <entry>
    <title>友链</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[]]></content>
    
  </entry>
  
  
  
  <entry>
    <title>myself</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[]]></content>
    
  </entry>
  
  
  
  <entry>
    <title>分类</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[]]></content>
    
  </entry>
  
  
  
  <entry>
    <title>日志</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[]]></content>
    
  </entry>
  
  
  
  <entry>
    <title>留言板</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" href="https://cdn.jsdelivr.net/gh/zjwo/CDN/css/messagebar.css"><div id="computer"><div id="maincontent"><br><div id="form-wrap"><img src="https://cdn.jsdelivr.net/gh/cpddo/blend@master/20210216/before.webp" id="beforeimg"><div id="envelope"><form><div class="formmain"><img class="headerimg" src="https://cdn.jsdelivr.net/gh/cpddo/blend@master/20210216/t011bf35a6af9498421.6whv4f8z5v00.webp"><div style="padding: 5px 20px;"><center><h3 calss="title3">来自小杨的留言</h3></center><center class="comments">有什么想問的？<br>有什么想說的？<br>有什么想吐槽的？<br>都可以在這裏留言哦 💋💋<br></center><div class="bottomcontent"><img class="bottomimg" src="https://cdn.jsdelivr.net/gh/cpddo/blend@master/20210216/U0968ee80fd5c4f05a02bdda9709b041eE.webp"></div><p class="bottomhr">自动书记人偶竭诚为您服务！</p></div></div></form></div><img id="afterimg" src="https://cdn.jsdelivr.net/gh/cpddo/blend@master/20210216/after.webp"></div></div></div><div id="mobile"><form><div class="formmain"><img class="headerimg" src="https://cdn.jsdelivr.net/gh/cpddo/blend@master/20210216/t011bf35a6af9498421.6whv4f8z5v00.webp"><div style="padding: 5px 20px;"><center><h3 class="title3">来自小杨的留言</h3></center><center class="comments">有什么想問的？<br>有什么想說的？<br>有什么想吐槽的？<br>都可以在這裏留言哦 💋💋<br></center><div class="bottomcontent"><img src="https://cdn.jsdelivr.net/gh/cpddo/blend@master/20210216/U0968ee80fd5c4f05a02bdda9709b041eE.webp" class="bottomhr"></div><p class="bottomhr">自动书记人偶竭诚为您服务！</p></div></div></form></div>]]></content>
    
  </entry>
  
  
  
  <entry>
    <title>tags</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[]]></content>
    
  </entry>
  
  
  
</search>
